{
  "generated": [
    "app"
  ],
  "modules": {
    "account": {
      "rootPath": "account",
      "remoteServiceName": "AbpAccount",
      "controllers": {
        "Volo.Abp.Account.Web.Areas.Account.Controllers.AccountController": {
          "controllerName": "Account",
          "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.AccountController",
          "interfaces": [],
          "actions": {
            "LoginByLogin": {
              "uniqueName": "LoginByLogin",
              "name": "Login",
              "httpMethod": "POST",
              "url": "api/account/login",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "login",
                  "typeAsString": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo, Volo.Abp.Account.Web",
                  "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "login",
                  "name": "login",
                  "jsonName": null,
                  "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult",
                "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult"
              },
              "allowAnonymous": null
            },
            "Logout": {
              "uniqueName": "Logout",
              "name": "Logout",
              "httpMethod": "GET",
              "url": "api/account/logout",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "CheckPasswordByLogin": {
              "uniqueName": "CheckPasswordByLogin",
              "name": "CheckPassword",
              "httpMethod": "POST",
              "url": "api/account/check-password",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "login",
                  "typeAsString": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo, Volo.Abp.Account.Web",
                  "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "login",
                  "name": "login",
                  "jsonName": null,
                  "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult",
                "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult"
              },
              "allowAnonymous": null
            }
          }
        },
        "Volo.Abp.Account.AccountController": {
          "controllerName": "Account",
          "type": "Volo.Abp.Account.AccountController",
          "interfaces": [
            {
              "type": "Volo.Abp.Account.IAccountAppService"
            }
          ],
          "actions": {
            "RegisterAsyncByInput": {
              "uniqueName": "RegisterAsyncByInput",
              "name": "RegisterAsync",
              "httpMethod": "POST",
              "url": "api/account/register",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Account.RegisterDto, Volo.Abp.Account.Application.Contracts",
                  "type": "Volo.Abp.Account.RegisterDto",
                  "typeSimple": "Volo.Abp.Account.RegisterDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Account.RegisterDto",
                  "typeSimple": "Volo.Abp.Account.RegisterDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              },
              "allowAnonymous": null
            },
            "SendPasswordResetCodeAsyncByInput": {
              "uniqueName": "SendPasswordResetCodeAsyncByInput",
              "name": "SendPasswordResetCodeAsync",
              "httpMethod": "POST",
              "url": "api/account/send-password-reset-code",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Account.SendPasswordResetCodeDto, Volo.Abp.Account.Application.Contracts",
                  "type": "Volo.Abp.Account.SendPasswordResetCodeDto",
                  "typeSimple": "Volo.Abp.Account.SendPasswordResetCodeDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Account.SendPasswordResetCodeDto",
                  "typeSimple": "Volo.Abp.Account.SendPasswordResetCodeDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "ResetPasswordAsyncByInput": {
              "uniqueName": "ResetPasswordAsyncByInput",
              "name": "ResetPasswordAsync",
              "httpMethod": "POST",
              "url": "api/account/reset-password",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Account.ResetPasswordDto, Volo.Abp.Account.Application.Contracts",
                  "type": "Volo.Abp.Account.ResetPasswordDto",
                  "typeSimple": "Volo.Abp.Account.ResetPasswordDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Account.ResetPasswordDto",
                  "typeSimple": "Volo.Abp.Account.ResetPasswordDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            }
          }
        }
      }
    },
    "settingManagement": {
      "rootPath": "settingManagement",
      "remoteServiceName": "SettingManagement",
      "controllers": {
        "Volo.Abp.SettingManagement.EmailSettingsController": {
          "controllerName": "EmailSettings",
          "type": "Volo.Abp.SettingManagement.EmailSettingsController",
          "interfaces": [
            {
              "type": "Volo.Abp.SettingManagement.IEmailSettingsAppService"
            }
          ],
          "actions": {
            "GetAsync": {
              "uniqueName": "GetAsync",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/setting-management/emailing",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Volo.Abp.SettingManagement.EmailSettingsDto",
                "typeSimple": "Volo.Abp.SettingManagement.EmailSettingsDto"
              },
              "allowAnonymous": null
            },
            "UpdateAsyncByInput": {
              "uniqueName": "UpdateAsyncByInput",
              "name": "UpdateAsync",
              "httpMethod": "POST",
              "url": "api/setting-management/emailing",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.SettingManagement.UpdateEmailSettingsDto, Volo.Abp.SettingManagement.Application.Contracts",
                  "type": "Volo.Abp.SettingManagement.UpdateEmailSettingsDto",
                  "typeSimple": "Volo.Abp.SettingManagement.UpdateEmailSettingsDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.SettingManagement.UpdateEmailSettingsDto",
                  "typeSimple": "Volo.Abp.SettingManagement.UpdateEmailSettingsDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            }
          }
        }
      }
    },
    "permissionManagement": {
      "rootPath": "permissionManagement",
      "remoteServiceName": "AbpPermissionManagement",
      "controllers": {
        "Volo.Abp.PermissionManagement.PermissionsController": {
          "controllerName": "Permissions",
          "type": "Volo.Abp.PermissionManagement.PermissionsController",
          "interfaces": [
            {
              "type": "Volo.Abp.PermissionManagement.IPermissionAppService"
            }
          ],
          "actions": {
            "GetAsyncByProviderNameAndProviderKey": {
              "uniqueName": "GetAsyncByProviderNameAndProviderKey",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/permission-management/permissions",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "providerName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "providerKey",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "providerName",
                  "name": "providerName",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "providerKey",
                  "name": "providerKey",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.PermissionManagement.GetPermissionListResultDto",
                "typeSimple": "Volo.Abp.PermissionManagement.GetPermissionListResultDto"
              },
              "allowAnonymous": null
            },
            "UpdateAsyncByProviderNameAndProviderKeyAndInput": {
              "uniqueName": "UpdateAsyncByProviderNameAndProviderKeyAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/permission-management/permissions",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "providerName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "providerKey",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.PermissionManagement.UpdatePermissionsDto, Volo.Abp.PermissionManagement.Application.Contracts",
                  "type": "Volo.Abp.PermissionManagement.UpdatePermissionsDto",
                  "typeSimple": "Volo.Abp.PermissionManagement.UpdatePermissionsDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "providerName",
                  "name": "providerName",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "providerKey",
                  "name": "providerKey",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.PermissionManagement.UpdatePermissionsDto",
                  "typeSimple": "Volo.Abp.PermissionManagement.UpdatePermissionsDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            }
          }
        }
      }
    },
    "identity": {
      "rootPath": "identity",
      "remoteServiceName": "AbpIdentity",
      "controllers": {
        "Volo.Abp.Identity.IdentityRoleController": {
          "controllerName": "IdentityRole",
          "type": "Volo.Abp.Identity.IdentityRoleController",
          "interfaces": [
            {
              "type": "Volo.Abp.Identity.IIdentityRoleAppService"
            }
          ],
          "actions": {
            "GetAllListAsync": {
              "uniqueName": "GetAllListAsync",
              "name": "GetAllListAsync",
              "httpMethod": "GET",
              "url": "api/identity/roles/all",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>"
              },
              "allowAnonymous": null
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/identity/roles",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.GetIdentityRolesInput, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.GetIdentityRolesInput",
                  "typeSimple": "Volo.Abp.Identity.GetIdentityRolesInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityRoleDto>"
              },
              "allowAnonymous": null
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/identity/roles/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityRoleDto",
                "typeSimple": "Volo.Abp.Identity.IdentityRoleDto"
              },
              "allowAnonymous": null
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/identity/roles",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.IdentityRoleCreateDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.IdentityRoleCreateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityRoleCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Identity.IdentityRoleCreateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityRoleCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityRoleDto",
                "typeSimple": "Volo.Abp.Identity.IdentityRoleDto"
              },
              "allowAnonymous": null
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/identity/roles/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.IdentityRoleUpdateDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.IdentityRoleUpdateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityRoleUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Identity.IdentityRoleUpdateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityRoleUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityRoleDto",
                "typeSimple": "Volo.Abp.Identity.IdentityRoleDto"
              },
              "allowAnonymous": null
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/identity/roles/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            }
          }
        },
        "Volo.Abp.Identity.IdentityUserController": {
          "controllerName": "IdentityUser",
          "type": "Volo.Abp.Identity.IdentityUserController",
          "interfaces": [
            {
              "type": "Volo.Abp.Identity.IIdentityUserAppService"
            }
          ],
          "actions": {
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              },
              "allowAnonymous": null
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/identity/users",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.GetIdentityUsersInput, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.GetIdentityUsersInput",
                  "typeSimple": "Volo.Abp.Identity.GetIdentityUsersInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityUserDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityUserDto>"
              },
              "allowAnonymous": null
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/identity/users",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.IdentityUserCreateDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.IdentityUserCreateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Identity.IdentityUserCreateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              },
              "allowAnonymous": null
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/identity/users/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.IdentityUserUpdateDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.IdentityUserUpdateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Identity.IdentityUserUpdateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              },
              "allowAnonymous": null
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/identity/users/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "GetRolesAsyncById": {
              "uniqueName": "GetRolesAsyncById",
              "name": "GetRolesAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/{id}/roles",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>"
              },
              "allowAnonymous": null
            },
            "GetAssignableRolesAsync": {
              "uniqueName": "GetAssignableRolesAsync",
              "name": "GetAssignableRolesAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/assignable-roles",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>"
              },
              "allowAnonymous": null
            },
            "UpdateRolesAsyncByIdAndInput": {
              "uniqueName": "UpdateRolesAsyncByIdAndInput",
              "name": "UpdateRolesAsync",
              "httpMethod": "PUT",
              "url": "api/identity/users/{id}/roles",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.IdentityUserUpdateRolesDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.IdentityUserUpdateRolesDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateRolesDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Identity.IdentityUserUpdateRolesDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateRolesDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "FindByUsernameAsyncByUserName": {
              "uniqueName": "FindByUsernameAsyncByUserName",
              "name": "FindByUsernameAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/by-username/{userName}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "userName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "userName",
                  "name": "userName",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              },
              "allowAnonymous": null
            },
            "FindByEmailAsyncByEmail": {
              "uniqueName": "FindByEmailAsyncByEmail",
              "name": "FindByEmailAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/by-email/{email}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "email",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "email",
                  "name": "email",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              },
              "allowAnonymous": null
            }
          }
        },
        "Volo.Abp.Identity.IdentityUserLookupController": {
          "controllerName": "IdentityUserLookup",
          "type": "Volo.Abp.Identity.IdentityUserLookupController",
          "interfaces": [
            {
              "type": "Volo.Abp.Identity.IIdentityUserLookupAppService"
            }
          ],
          "actions": {
            "FindByIdAsyncById": {
              "uniqueName": "FindByIdAsyncById",
              "name": "FindByIdAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/lookup/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Users.UserData",
                "typeSimple": "Volo.Abp.Users.UserData"
              },
              "allowAnonymous": null
            },
            "FindByUserNameAsyncByUserName": {
              "uniqueName": "FindByUserNameAsyncByUserName",
              "name": "FindByUserNameAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/lookup/by-username/{userName}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "userName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "userName",
                  "name": "userName",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Users.UserData",
                "typeSimple": "Volo.Abp.Users.UserData"
              },
              "allowAnonymous": null
            },
            "SearchAsyncByInput": {
              "uniqueName": "SearchAsyncByInput",
              "name": "SearchAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/lookup/search",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.UserLookupSearchInputDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.UserLookupSearchInputDto",
                  "typeSimple": "Volo.Abp.Identity.UserLookupSearchInputDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Users.UserData>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Users.UserData>"
              },
              "allowAnonymous": null
            },
            "GetCountAsyncByInput": {
              "uniqueName": "GetCountAsyncByInput",
              "name": "GetCountAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/lookup/count",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.UserLookupCountInputDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.UserLookupCountInputDto",
                  "typeSimple": "Volo.Abp.Identity.UserLookupCountInputDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "System.Int64",
                "typeSimple": "number"
              },
              "allowAnonymous": null
            }
          }
        },
        "Volo.Abp.Identity.ProfileController": {
          "controllerName": "Profile",
          "type": "Volo.Abp.Identity.ProfileController",
          "interfaces": [
            {
              "type": "Volo.Abp.Identity.IProfileAppService"
            }
          ],
          "actions": {
            "GetAsync": {
              "uniqueName": "GetAsync",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/identity/my-profile",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Volo.Abp.Identity.ProfileDto",
                "typeSimple": "Volo.Abp.Identity.ProfileDto"
              },
              "allowAnonymous": null
            },
            "UpdateAsyncByInput": {
              "uniqueName": "UpdateAsyncByInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/identity/my-profile",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.UpdateProfileDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.UpdateProfileDto",
                  "typeSimple": "Volo.Abp.Identity.UpdateProfileDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Identity.UpdateProfileDto",
                  "typeSimple": "Volo.Abp.Identity.UpdateProfileDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.ProfileDto",
                "typeSimple": "Volo.Abp.Identity.ProfileDto"
              },
              "allowAnonymous": null
            },
            "ChangePasswordAsyncByInput": {
              "uniqueName": "ChangePasswordAsyncByInput",
              "name": "ChangePasswordAsync",
              "httpMethod": "POST",
              "url": "api/identity/my-profile/change-password",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.ChangePasswordInput, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.ChangePasswordInput",
                  "typeSimple": "Volo.Abp.Identity.ChangePasswordInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Identity.ChangePasswordInput",
                  "typeSimple": "Volo.Abp.Identity.ChangePasswordInput",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            }
          }
        }
      }
    },
    "app": {
      "rootPath": "app",
      "remoteServiceName": "Default",
      "controllers": {
        "RMG.ComplianceSystem.StaticData.StaticDataAppService": {
          "controllerName": "StaticData",
          "type": "RMG.ComplianceSystem.StaticData.StaticDataAppService",
          "interfaces": [
            {
              "type": "Volo.Abp.Validation.IValidationEnabled"
            },
            {
              "type": "Volo.Abp.Auditing.IAuditingEnabled"
            },
            {
              "type": "Volo.Abp.GlobalFeatures.IGlobalFeatureCheckingEnabled"
            },
            {
              "type": "RMG.ComplianceSystem.StaticData.IStaticDataAppService"
            }
          ],
          "actions": {
            "GetListByFilterAsyncByInput": {
              "uniqueName": "GetListByFilterAsyncByInput",
              "name": "GetListByFilterAsync",
              "httpMethod": "GET",
              "url": "api/app/static-data/by-filter",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.StaticData.StaticDataPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.StaticData.StaticDataPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.StaticData.StaticDataPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "ParentId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Type",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.StaticData.StaticDataDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.StaticData.StaticDataDto>"
              },
              "allowAnonymous": null
            },
            "getTypeStaticData": {
              "uniqueName": "getTypeStaticData",
              "name": "getTypeStaticData",
              "httpMethod": "GET",
              "url": "api/app/static-data/get-type-static-data",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<RMG.ComplianceSystem.StaticData.getEnumTypeStaticData>",
                "typeSimple": "[RMG.ComplianceSystem.StaticData.getEnumTypeStaticData]"
              },
              "allowAnonymous": null
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/static-data",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.StaticData.CreateUpdateStaticDataDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.StaticData.CreateUpdateStaticDataDto",
                  "typeSimple": "RMG.ComplianceSystem.StaticData.CreateUpdateStaticDataDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.StaticData.CreateUpdateStaticDataDto",
                  "typeSimple": "RMG.ComplianceSystem.StaticData.CreateUpdateStaticDataDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.StaticData.StaticDataDto",
                "typeSimple": "RMG.ComplianceSystem.StaticData.StaticDataDto"
              },
              "allowAnonymous": null
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/static-data/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.StaticData.CreateUpdateStaticDataDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.StaticData.CreateUpdateStaticDataDto",
                  "typeSimple": "RMG.ComplianceSystem.StaticData.CreateUpdateStaticDataDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.StaticData.CreateUpdateStaticDataDto",
                  "typeSimple": "RMG.ComplianceSystem.StaticData.CreateUpdateStaticDataDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.StaticData.StaticDataDto",
                "typeSimple": "RMG.ComplianceSystem.StaticData.StaticDataDto"
              },
              "allowAnonymous": null
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/static-data/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/static-data/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.StaticData.StaticDataDto",
                "typeSimple": "RMG.ComplianceSystem.StaticData.StaticDataDto"
              },
              "allowAnonymous": null
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/static-data",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.StaticData.StaticDataPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.StaticData.StaticDataPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.StaticData.StaticDataPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "ParentId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Type",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.StaticData.StaticDataDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.StaticData.StaticDataDto>"
              },
              "allowAnonymous": null
            }
          }
        },
        "RMG.ComplianceSystem.RiskTreatments.RiskTreatmentAppService": {
          "controllerName": "RiskTreatment",
          "type": "RMG.ComplianceSystem.RiskTreatments.RiskTreatmentAppService",
          "interfaces": [
            {
              "type": "Volo.Abp.Validation.IValidationEnabled"
            },
            {
              "type": "Volo.Abp.Auditing.IAuditingEnabled"
            },
            {
              "type": "Volo.Abp.GlobalFeatures.IGlobalFeatureCheckingEnabled"
            },
            {
              "type": "RMG.ComplianceSystem.RiskTreatments.IRiskTreatmentAppService"
            }
          ],
          "actions": {
            "getStatusNameByStatusId": {
              "uniqueName": "getStatusNameByStatusId",
              "name": "getStatusName",
              "httpMethod": "GET",
              "url": "api/app/risk-treatment/get-status-name/{statusId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "statusId",
                  "typeAsString": "System.Nullable`1[[System.Int32, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib",
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "statusId",
                  "name": "statusId",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.StaticData.getEnumTypeStaticData",
                "typeSimple": "RMG.ComplianceSystem.StaticData.getEnumTypeStaticData"
              },
              "allowAnonymous": null
            },
            "getStatus": {
              "uniqueName": "getStatus",
              "name": "getStatus",
              "httpMethod": "GET",
              "url": "api/app/risk-treatment/get-status",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<RMG.ComplianceSystem.StaticData.getEnumTypeStaticData>",
                "typeSimple": "[RMG.ComplianceSystem.StaticData.getEnumTypeStaticData]"
              },
              "allowAnonymous": null
            },
            "GetListRiskByFilterAsyncByInput": {
              "uniqueName": "GetListRiskByFilterAsyncByInput",
              "name": "GetListRiskByFilterAsync",
              "httpMethod": "GET",
              "url": "api/app/risk-treatment/risk-by-filter",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.RiskTreatments.Dtos.RiskTreatmentPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.RiskTreatments.Dtos.RiskTreatmentPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.RiskTreatments.Dtos.RiskTreatmentPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "RiskOpportunityId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.RiskTreatments.RiskTreatmentDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.RiskTreatments.RiskTreatmentDto>"
              },
              "allowAnonymous": null
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/risk-treatment",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.RiskTreatments.CreateUpdateRiskTreatmentDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.RiskTreatments.CreateUpdateRiskTreatmentDto",
                  "typeSimple": "RMG.ComplianceSystem.RiskTreatments.CreateUpdateRiskTreatmentDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.RiskTreatments.CreateUpdateRiskTreatmentDto",
                  "typeSimple": "RMG.ComplianceSystem.RiskTreatments.CreateUpdateRiskTreatmentDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.RiskTreatments.RiskTreatmentDto",
                "typeSimple": "RMG.ComplianceSystem.RiskTreatments.RiskTreatmentDto"
              },
              "allowAnonymous": null
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/risk-treatment/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.RiskTreatments.CreateUpdateRiskTreatmentDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.RiskTreatments.CreateUpdateRiskTreatmentDto",
                  "typeSimple": "RMG.ComplianceSystem.RiskTreatments.CreateUpdateRiskTreatmentDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.RiskTreatments.CreateUpdateRiskTreatmentDto",
                  "typeSimple": "RMG.ComplianceSystem.RiskTreatments.CreateUpdateRiskTreatmentDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.RiskTreatments.RiskTreatmentDto",
                "typeSimple": "RMG.ComplianceSystem.RiskTreatments.RiskTreatmentDto"
              },
              "allowAnonymous": null
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/risk-treatment/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/risk-treatment/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.RiskTreatments.RiskTreatmentDto",
                "typeSimple": "RMG.ComplianceSystem.RiskTreatments.RiskTreatmentDto"
              },
              "allowAnonymous": null
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/risk-treatment",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.RiskTreatments.Dtos.RiskTreatmentPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.RiskTreatments.Dtos.RiskTreatmentPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.RiskTreatments.Dtos.RiskTreatmentPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "RiskOpportunityId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.RiskTreatments.RiskTreatmentDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.RiskTreatments.RiskTreatmentDto>"
              },
              "allowAnonymous": null
            }
          }
        },
        "RMG.ComplianceSystem.Risks.HistoryRiskAndOpportunityAppService": {
          "controllerName": "HistoryRiskAndOpportunity",
          "type": "RMG.ComplianceSystem.Risks.HistoryRiskAndOpportunityAppService",
          "interfaces": [
            {
              "type": "Volo.Abp.Validation.IValidationEnabled"
            },
            {
              "type": "Volo.Abp.Auditing.IAuditingEnabled"
            },
            {
              "type": "Volo.Abp.GlobalFeatures.IGlobalFeatureCheckingEnabled"
            },
            {
              "type": "RMG.ComplianceSystem.Risks.IHistoryRiskAndOpportunityAppService"
            }
          ],
          "actions": {
            "GetListHistoryByFilterAsyncByInput": {
              "uniqueName": "GetListHistoryByFilterAsyncByInput",
              "name": "GetListHistoryByFilterAsync",
              "httpMethod": "GET",
              "url": "api/app/history-risk-and-opportunity/history-by-filter",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Risks.Dtos.HistoryRiskOpportunityPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Risks.Dtos.HistoryRiskOpportunityPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.Risks.Dtos.HistoryRiskOpportunityPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "WorkFlowStages",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "RiskOpportunityId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Risks.Dtos.HistoryRiskAndOpportunityDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Risks.Dtos.HistoryRiskAndOpportunityDto>"
              },
              "allowAnonymous": null
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/history-risk-and-opportunity",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Risks.CreateUpdateHistoryRiskAndOpportunityDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Risks.CreateUpdateHistoryRiskAndOpportunityDto",
                  "typeSimple": "RMG.ComplianceSystem.Risks.CreateUpdateHistoryRiskAndOpportunityDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Risks.CreateUpdateHistoryRiskAndOpportunityDto",
                  "typeSimple": "RMG.ComplianceSystem.Risks.CreateUpdateHistoryRiskAndOpportunityDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Risks.Dtos.HistoryRiskAndOpportunityDto",
                "typeSimple": "RMG.ComplianceSystem.Risks.Dtos.HistoryRiskAndOpportunityDto"
              },
              "allowAnonymous": null
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/history-risk-and-opportunity/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Risks.CreateUpdateHistoryRiskAndOpportunityDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Risks.CreateUpdateHistoryRiskAndOpportunityDto",
                  "typeSimple": "RMG.ComplianceSystem.Risks.CreateUpdateHistoryRiskAndOpportunityDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Risks.CreateUpdateHistoryRiskAndOpportunityDto",
                  "typeSimple": "RMG.ComplianceSystem.Risks.CreateUpdateHistoryRiskAndOpportunityDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Risks.Dtos.HistoryRiskAndOpportunityDto",
                "typeSimple": "RMG.ComplianceSystem.Risks.Dtos.HistoryRiskAndOpportunityDto"
              },
              "allowAnonymous": null
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/history-risk-and-opportunity/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/history-risk-and-opportunity/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Risks.Dtos.HistoryRiskAndOpportunityDto",
                "typeSimple": "RMG.ComplianceSystem.Risks.Dtos.HistoryRiskAndOpportunityDto"
              },
              "allowAnonymous": null
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/history-risk-and-opportunity",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Risks.Dtos.HistoryRiskOpportunityPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Risks.Dtos.HistoryRiskOpportunityPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.Risks.Dtos.HistoryRiskOpportunityPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "WorkFlowStages",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "RiskOpportunityId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Risks.Dtos.HistoryRiskAndOpportunityDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Risks.Dtos.HistoryRiskAndOpportunityDto>"
              },
              "allowAnonymous": null
            }
          }
        },
        "RMG.ComplianceSystem.Risks.RiskAndOpportunityAppService": {
          "controllerName": "RiskAndOpportunity",
          "type": "RMG.ComplianceSystem.Risks.RiskAndOpportunityAppService",
          "interfaces": [
            {
              "type": "Volo.Abp.Validation.IValidationEnabled"
            },
            {
              "type": "Volo.Abp.Auditing.IAuditingEnabled"
            },
            {
              "type": "Volo.Abp.GlobalFeatures.IGlobalFeatureCheckingEnabled"
            },
            {
              "type": "RMG.ComplianceSystem.Risks.IRiskAndOpportunityAppService"
            }
          ],
          "actions": {
            "GetListRiskByFilterAsyncByInput": {
              "uniqueName": "GetListRiskByFilterAsyncByInput",
              "name": "GetListRiskByFilterAsync",
              "httpMethod": "GET",
              "url": "api/app/risk-and-opportunity/risk-by-filter",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Risks.Dtos.RiskOpportunityPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Risks.Dtos.RiskOpportunityPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.Risks.Dtos.RiskOpportunityPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Type",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Potential",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "ReEvaluation",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "PotentialValue",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "OwnerId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Status",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "UserId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "DepartmentId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Risks.Dtos.RiskAndOpportunityDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Risks.Dtos.RiskAndOpportunityDto>"
              },
              "allowAnonymous": null
            },
            "GetListRiskByOwnerIdAsyncByInput": {
              "uniqueName": "GetListRiskByOwnerIdAsyncByInput",
              "name": "GetListRiskByOwnerIdAsync",
              "httpMethod": "GET",
              "url": "api/app/risk-and-opportunity/risk-by-owner-id",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Risks.Dtos.RiskOpportunityPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Risks.Dtos.RiskOpportunityPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.Risks.Dtos.RiskOpportunityPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Type",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Potential",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "ReEvaluation",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "PotentialValue",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "OwnerId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Status",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "UserId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "DepartmentId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Risks.Dtos.RiskAndOpportunityDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Risks.Dtos.RiskAndOpportunityDto>"
              },
              "allowAnonymous": null
            },
            "getPotentialNameByPotential": {
              "uniqueName": "getPotentialNameByPotential",
              "name": "getPotentialName",
              "httpMethod": "GET",
              "url": "api/app/risk-and-opportunity/get-potential-name",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "Potential",
                  "typeAsString": "System.Nullable`1[[System.Int32, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib",
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "Potential",
                  "name": "Potential",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.StaticData.getEnumTypeStaticData",
                "typeSimple": "RMG.ComplianceSystem.StaticData.getEnumTypeStaticData"
              },
              "allowAnonymous": null
            },
            "getMatrixByMatrix": {
              "uniqueName": "getMatrixByMatrix",
              "name": "getMatrix",
              "httpMethod": "GET",
              "url": "api/app/risk-and-opportunity/get-matrix",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "matrix",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "matrix",
                  "name": "matrix",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.StaticData.getMatrix",
                "typeSimple": "RMG.ComplianceSystem.StaticData.getMatrix"
              },
              "allowAnonymous": null
            },
            "AllRisksAndOpportunitiesByInput": {
              "uniqueName": "AllRisksAndOpportunitiesByInput",
              "name": "AllRisksAndOpportunities",
              "httpMethod": "GET",
              "url": "api/app/risk-and-opportunity/all-risks-and-opportunities",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Risks.Dtos.RiskOpportunityPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Risks.Dtos.RiskOpportunityPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.Risks.Dtos.RiskOpportunityPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Type",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Potential",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "ReEvaluation",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "PotentialValue",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "OwnerId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Status",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "UserId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "DepartmentId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Risks.Dtos.RiskAndOpportunityDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Risks.Dtos.RiskAndOpportunityDto>"
              },
              "allowAnonymous": null
            },
            "GetMitigationRisksAndOpportunitiesByInput": {
              "uniqueName": "GetMitigationRisksAndOpportunitiesByInput",
              "name": "GetMitigationRisksAndOpportunities",
              "httpMethod": "GET",
              "url": "api/app/risk-and-opportunity/mitigation-risks-and-opportunities",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Risks.Dtos.RiskOpportunityPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Risks.Dtos.RiskOpportunityPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.Risks.Dtos.RiskOpportunityPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Type",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Potential",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "ReEvaluation",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "PotentialValue",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "OwnerId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Status",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "UserId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "DepartmentId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.Dictionary<System.String,System.Int32>",
                "typeSimple": "{string:number}"
              },
              "allowAnonymous": null
            },
            "OpenCloseRisksAndOpportunitiesByInput": {
              "uniqueName": "OpenCloseRisksAndOpportunitiesByInput",
              "name": "OpenCloseRisksAndOpportunities",
              "httpMethod": "GET",
              "url": "api/app/risk-and-opportunity/open-close-risks-and-opportunities",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Risks.Dtos.RiskOpportunityPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Risks.Dtos.RiskOpportunityPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.Risks.Dtos.RiskOpportunityPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Type",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Potential",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "ReEvaluation",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "PotentialValue",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "OwnerId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Status",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "UserId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "DepartmentId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.Dictionary<System.String,System.Int32>",
                "typeSimple": "{string:number}"
              },
              "allowAnonymous": null
            },
            "TreatmentRisksAndOpportunitiesByInput": {
              "uniqueName": "TreatmentRisksAndOpportunitiesByInput",
              "name": "TreatmentRisksAndOpportunities",
              "httpMethod": "GET",
              "url": "api/app/risk-and-opportunity/treatment-risks-and-opportunities",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Risks.Dtos.RiskOpportunityPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Risks.Dtos.RiskOpportunityPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.Risks.Dtos.RiskOpportunityPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Type",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Potential",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "ReEvaluation",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "PotentialValue",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "OwnerId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Status",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "UserId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "DepartmentId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.Dictionary<System.String,System.Int32>",
                "typeSimple": "{string:number}"
              },
              "allowAnonymous": null
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/risk-and-opportunity",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Risks.Dtos.CreateUpdateRiskAndOpportunityDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Risks.Dtos.CreateUpdateRiskAndOpportunityDto",
                  "typeSimple": "RMG.ComplianceSystem.Risks.Dtos.CreateUpdateRiskAndOpportunityDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Risks.Dtos.CreateUpdateRiskAndOpportunityDto",
                  "typeSimple": "RMG.ComplianceSystem.Risks.Dtos.CreateUpdateRiskAndOpportunityDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Risks.Dtos.RiskAndOpportunityDto",
                "typeSimple": "RMG.ComplianceSystem.Risks.Dtos.RiskAndOpportunityDto"
              },
              "allowAnonymous": null
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/risk-and-opportunity/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Risks.Dtos.CreateUpdateRiskAndOpportunityDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Risks.Dtos.CreateUpdateRiskAndOpportunityDto",
                  "typeSimple": "RMG.ComplianceSystem.Risks.Dtos.CreateUpdateRiskAndOpportunityDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Risks.Dtos.CreateUpdateRiskAndOpportunityDto",
                  "typeSimple": "RMG.ComplianceSystem.Risks.Dtos.CreateUpdateRiskAndOpportunityDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Risks.Dtos.RiskAndOpportunityDto",
                "typeSimple": "RMG.ComplianceSystem.Risks.Dtos.RiskAndOpportunityDto"
              },
              "allowAnonymous": null
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/risk-and-opportunity/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/risk-and-opportunity/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Risks.Dtos.RiskAndOpportunityDto",
                "typeSimple": "RMG.ComplianceSystem.Risks.Dtos.RiskAndOpportunityDto"
              },
              "allowAnonymous": null
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/risk-and-opportunity",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Risks.Dtos.RiskOpportunityPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Risks.Dtos.RiskOpportunityPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.Risks.Dtos.RiskOpportunityPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Type",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Potential",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "ReEvaluation",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "PotentialValue",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "OwnerId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Status",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "UserId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "DepartmentId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Risks.Dtos.RiskAndOpportunityDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Risks.Dtos.RiskAndOpportunityDto>"
              },
              "allowAnonymous": null
            }
          }
        },
        "RMG.ComplianceSystem.Notifications.NotificationAppService": {
          "controllerName": "Notification",
          "type": "RMG.ComplianceSystem.Notifications.NotificationAppService",
          "interfaces": [
            {
              "type": "Volo.Abp.Validation.IValidationEnabled"
            },
            {
              "type": "Volo.Abp.Auditing.IAuditingEnabled"
            },
            {
              "type": "Volo.Abp.GlobalFeatures.IGlobalFeatureCheckingEnabled"
            },
            {
              "type": "RMG.ComplianceSystem.Notifications.INotificationAppService"
            }
          ],
          "actions": {
            "SendMailByMailToAndSubjectAndBodyAndIsHTML": {
              "uniqueName": "SendMailByMailToAndSubjectAndBodyAndIsHTML",
              "name": "SendMail",
              "httpMethod": "POST",
              "url": "api/app/notification/send-mail",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "MailTo",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "subject",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "body",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "IsHTML",
                  "typeAsString": "System.Boolean, System.Private.CoreLib",
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "MailTo",
                  "name": "MailTo",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "subject",
                  "name": "subject",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "body",
                  "name": "body",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "IsHTML",
                  "name": "IsHTML",
                  "jsonName": null,
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "SendNotifications": {
              "uniqueName": "SendNotifications",
              "name": "SendNotifications",
              "httpMethod": "POST",
              "url": "api/app/notification/send-notifications",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": true
            },
            "NotifictionUserByUserToNotify": {
              "uniqueName": "NotifictionUserByUserToNotify",
              "name": "NotifictionUser",
              "httpMethod": "POST",
              "url": "api/app/notification/notifiction-user",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "userToNotify",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "userToNotify",
                  "name": "userToNotify",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "MarkAsSeenById": {
              "uniqueName": "MarkAsSeenById",
              "name": "MarkAsSeen",
              "httpMethod": "POST",
              "url": "api/app/notification/{id}/mark-as-seen",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "GetCurrentUserNotificationAsync": {
              "uniqueName": "GetCurrentUserNotificationAsync",
              "name": "GetCurrentUserNotificationAsync",
              "httpMethod": "GET",
              "url": "api/app/notification/current-user-notification",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Notifications.Dtos.NotifyUserDto",
                "typeSimple": "RMG.ComplianceSystem.Notifications.Dtos.NotifyUserDto"
              },
              "allowAnonymous": null
            },
            "GetListCurrentUserNotificationsAsyncByInput": {
              "uniqueName": "GetListCurrentUserNotificationsAsyncByInput",
              "name": "GetListCurrentUserNotificationsAsync",
              "httpMethod": "GET",
              "url": "api/app/notification/current-user-notifications",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Notifications.Dtos.NotificationPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Notifications.Dtos.NotificationPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.Notifications.Dtos.NotificationPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Body",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "CreationTime",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Source",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Notifications.NotySource?",
                  "typeSimple": "RMG.ComplianceSystem.Notifications.NotySource?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Notifications.Dtos.NotificationDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Notifications.Dtos.NotificationDto>"
              },
              "allowAnonymous": null
            },
            "GetListRiskByFilterAsyncByInput": {
              "uniqueName": "GetListRiskByFilterAsyncByInput",
              "name": "GetListRiskByFilterAsync",
              "httpMethod": "GET",
              "url": "api/app/notification/risk-by-filter",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Notifications.Dtos.NotificationPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Notifications.Dtos.NotificationPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.Notifications.Dtos.NotificationPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Body",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "CreationTime",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Source",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Notifications.NotySource?",
                  "typeSimple": "RMG.ComplianceSystem.Notifications.NotySource?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Notifications.Dtos.NotificationDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Notifications.Dtos.NotificationDto>"
              },
              "allowAnonymous": null
            },
            "GetURI": {
              "uniqueName": "GetURI",
              "name": "GetURI",
              "httpMethod": "GET",
              "url": "api/app/notification/u-rI",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.String",
                "typeSimple": "string"
              },
              "allowAnonymous": null
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/notification",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Notifications.Dtos.CreateUpdateNotificationDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Notifications.Dtos.CreateUpdateNotificationDto",
                  "typeSimple": "RMG.ComplianceSystem.Notifications.Dtos.CreateUpdateNotificationDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Notifications.Dtos.CreateUpdateNotificationDto",
                  "typeSimple": "RMG.ComplianceSystem.Notifications.Dtos.CreateUpdateNotificationDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Notifications.Dtos.NotificationDto",
                "typeSimple": "RMG.ComplianceSystem.Notifications.Dtos.NotificationDto"
              },
              "allowAnonymous": null
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/notification/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Notifications.Dtos.CreateUpdateNotificationDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Notifications.Dtos.CreateUpdateNotificationDto",
                  "typeSimple": "RMG.ComplianceSystem.Notifications.Dtos.CreateUpdateNotificationDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Notifications.Dtos.CreateUpdateNotificationDto",
                  "typeSimple": "RMG.ComplianceSystem.Notifications.Dtos.CreateUpdateNotificationDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Notifications.Dtos.NotificationDto",
                "typeSimple": "RMG.ComplianceSystem.Notifications.Dtos.NotificationDto"
              },
              "allowAnonymous": null
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/notification/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/notification/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Notifications.Dtos.NotificationDto",
                "typeSimple": "RMG.ComplianceSystem.Notifications.Dtos.NotificationDto"
              },
              "allowAnonymous": null
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/notification",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Notifications.Dtos.NotificationPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Notifications.Dtos.NotificationPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.Notifications.Dtos.NotificationPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Body",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "CreationTime",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Source",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Notifications.NotySource?",
                  "typeSimple": "RMG.ComplianceSystem.Notifications.NotySource?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Notifications.Dtos.NotificationDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Notifications.Dtos.NotificationDto>"
              },
              "allowAnonymous": null
            }
          }
        },
        "RMG.ComplianceSystem.InternalAuditQuestions.InternalAuditQuestionAppService": {
          "controllerName": "InternalAuditQuestion",
          "type": "RMG.ComplianceSystem.InternalAuditQuestions.InternalAuditQuestionAppService",
          "interfaces": [
            {
              "type": "Volo.Abp.Validation.IValidationEnabled"
            },
            {
              "type": "Volo.Abp.Auditing.IAuditingEnabled"
            },
            {
              "type": "Volo.Abp.GlobalFeatures.IGlobalFeatureCheckingEnabled"
            },
            {
              "type": "RMG.ComplianceSystem.InternalAuditQuestions.IInternalAuditQuestionAppService"
            }
          ],
          "actions": {
            "GetListQuestionByFilterAsyncByInput": {
              "uniqueName": "GetListQuestionByFilterAsyncByInput",
              "name": "GetListQuestionByFilterAsync",
              "httpMethod": "GET",
              "url": "api/app/internal-audit-question/question-by-filter",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.InternalAuditQuestions.Dtos.InternalAuditQuestionPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.InternalAuditQuestions.Dtos.InternalAuditQuestionPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.InternalAuditQuestions.Dtos.InternalAuditQuestionPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.InternalAuditQuestions.InternalAuditQuestionDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.InternalAuditQuestions.InternalAuditQuestionDto>"
              },
              "allowAnonymous": null
            },
            "GetQuestionByIdAsyncById": {
              "uniqueName": "GetQuestionByIdAsyncById",
              "name": "GetQuestionByIdAsync",
              "httpMethod": "GET",
              "url": "api/app/internal-audit-question/question-by-id/{Id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "Id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "Id",
                  "name": "Id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.InternalAuditQuestions.InternalAuditQuestionDto",
                "typeSimple": "RMG.ComplianceSystem.InternalAuditQuestions.InternalAuditQuestionDto"
              },
              "allowAnonymous": null
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/internal-audit-question",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.InternalAuditQuestions.CreateUpdateInternalAuditQuestionDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.InternalAuditQuestions.CreateUpdateInternalAuditQuestionDto",
                  "typeSimple": "RMG.ComplianceSystem.InternalAuditQuestions.CreateUpdateInternalAuditQuestionDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.InternalAuditQuestions.CreateUpdateInternalAuditQuestionDto",
                  "typeSimple": "RMG.ComplianceSystem.InternalAuditQuestions.CreateUpdateInternalAuditQuestionDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.InternalAuditQuestions.InternalAuditQuestionDto",
                "typeSimple": "RMG.ComplianceSystem.InternalAuditQuestions.InternalAuditQuestionDto"
              },
              "allowAnonymous": null
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/internal-audit-question/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.InternalAuditQuestions.CreateUpdateInternalAuditQuestionDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.InternalAuditQuestions.CreateUpdateInternalAuditQuestionDto",
                  "typeSimple": "RMG.ComplianceSystem.InternalAuditQuestions.CreateUpdateInternalAuditQuestionDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.InternalAuditQuestions.CreateUpdateInternalAuditQuestionDto",
                  "typeSimple": "RMG.ComplianceSystem.InternalAuditQuestions.CreateUpdateInternalAuditQuestionDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.InternalAuditQuestions.InternalAuditQuestionDto",
                "typeSimple": "RMG.ComplianceSystem.InternalAuditQuestions.InternalAuditQuestionDto"
              },
              "allowAnonymous": null
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/internal-audit-question/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/internal-audit-question/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.InternalAuditQuestions.InternalAuditQuestionDto",
                "typeSimple": "RMG.ComplianceSystem.InternalAuditQuestions.InternalAuditQuestionDto"
              },
              "allowAnonymous": null
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/internal-audit-question",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.InternalAuditQuestions.Dtos.InternalAuditQuestionPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.InternalAuditQuestions.Dtos.InternalAuditQuestionPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.InternalAuditQuestions.Dtos.InternalAuditQuestionPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.InternalAuditQuestions.InternalAuditQuestionDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.InternalAuditQuestions.InternalAuditQuestionDto>"
              },
              "allowAnonymous": null
            }
          }
        },
        "RMG.ComplianceSystem.InternalAuditQuestionLists.InternalAuditQuestionListAppService": {
          "controllerName": "InternalAuditQuestionList",
          "type": "RMG.ComplianceSystem.InternalAuditQuestionLists.InternalAuditQuestionListAppService",
          "interfaces": [
            {
              "type": "Volo.Abp.Validation.IValidationEnabled"
            },
            {
              "type": "Volo.Abp.Auditing.IAuditingEnabled"
            },
            {
              "type": "Volo.Abp.GlobalFeatures.IGlobalFeatureCheckingEnabled"
            },
            {
              "type": "RMG.ComplianceSystem.InternalAuditMenuQuestions.IInternalAuditMenuQuestionAppService"
            }
          ],
          "actions": {
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/internal-audit-question-list",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.CreateUpdateInternalAuditMenuQuestionDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.CreateUpdateInternalAuditMenuQuestionDto",
                  "typeSimple": "RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.CreateUpdateInternalAuditMenuQuestionDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.CreateUpdateInternalAuditMenuQuestionDto",
                  "typeSimple": "RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.CreateUpdateInternalAuditMenuQuestionDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.InternalAuditMenuQuestionDto",
                "typeSimple": "RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.InternalAuditMenuQuestionDto"
              },
              "allowAnonymous": null
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/internal-audit-question-list/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.CreateUpdateInternalAuditMenuQuestionDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.CreateUpdateInternalAuditMenuQuestionDto",
                  "typeSimple": "RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.CreateUpdateInternalAuditMenuQuestionDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.CreateUpdateInternalAuditMenuQuestionDto",
                  "typeSimple": "RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.CreateUpdateInternalAuditMenuQuestionDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.InternalAuditMenuQuestionDto",
                "typeSimple": "RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.InternalAuditMenuQuestionDto"
              },
              "allowAnonymous": null
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/internal-audit-question-list/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "GetListQuestionByFilterAsyncByInput": {
              "uniqueName": "GetListQuestionByFilterAsyncByInput",
              "name": "GetListQuestionByFilterAsync",
              "httpMethod": "GET",
              "url": "api/app/internal-audit-question-list/question-by-filter",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.InternalAuditMenuQuestionPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.InternalAuditMenuQuestionPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.InternalAuditMenuQuestionPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "FrameworkId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.InternalAuditMenuQuestionDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.InternalAuditMenuQuestionDto>"
              },
              "allowAnonymous": null
            },
            "GetListQuestionByIdAsyncByInput": {
              "uniqueName": "GetListQuestionByIdAsyncByInput",
              "name": "GetListQuestionByIdAsync",
              "httpMethod": "GET",
              "url": "api/app/internal-audit-question-list/question-by-id",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.InternalAuditQuestionLists.Footer.Dto.InternalAuditQuestionListPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.InternalAuditQuestionLists.Footer.Dto.InternalAuditQuestionListPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.InternalAuditQuestionLists.Footer.Dto.InternalAuditQuestionListPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "InternalAuditMenuQuestionId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "InternalAuditQuestionId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.InternalAuditQuestions.InternalAuditQuestionDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.InternalAuditQuestions.InternalAuditQuestionDto>"
              },
              "allowAnonymous": null
            },
            "GetListQuestionByFrameworkAsyncByInput": {
              "uniqueName": "GetListQuestionByFrameworkAsyncByInput",
              "name": "GetListQuestionByFrameworkAsync",
              "httpMethod": "GET",
              "url": "api/app/internal-audit-question-list/question-by-framework",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.InternalAuditMenuQuestionPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.InternalAuditMenuQuestionPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.InternalAuditMenuQuestionPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "FrameworkId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.InternalAuditQuestions.InternalAuditQuestionDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.InternalAuditQuestions.InternalAuditQuestionDto>"
              },
              "allowAnonymous": null
            },
            "GetMenuQuestionByIdAsyncById": {
              "uniqueName": "GetMenuQuestionByIdAsyncById",
              "name": "GetMenuQuestionByIdAsync",
              "httpMethod": "GET",
              "url": "api/app/internal-audit-question-list/menu-question-by-id/{Id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "Id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "Id",
                  "name": "Id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.InternalAuditMenuQuestionDto",
                "typeSimple": "RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.InternalAuditMenuQuestionDto"
              },
              "allowAnonymous": null
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/internal-audit-question-list/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.InternalAuditMenuQuestionDto",
                "typeSimple": "RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.InternalAuditMenuQuestionDto"
              },
              "allowAnonymous": null
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/internal-audit-question-list",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.InternalAuditMenuQuestionPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.InternalAuditMenuQuestionPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.InternalAuditMenuQuestionPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "FrameworkId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.InternalAuditMenuQuestionDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.InternalAuditMenuQuestionDto>"
              },
              "allowAnonymous": null
            }
          }
        },
        "RMG.ComplianceSystem.InternalAuditPreparations.InternalAuditPreparationAppService": {
          "controllerName": "InternalAuditPreparation",
          "type": "RMG.ComplianceSystem.InternalAuditPreparations.InternalAuditPreparationAppService",
          "interfaces": [
            {
              "type": "Volo.Abp.Validation.IValidationEnabled"
            },
            {
              "type": "Volo.Abp.Auditing.IAuditingEnabled"
            },
            {
              "type": "Volo.Abp.GlobalFeatures.IGlobalFeatureCheckingEnabled"
            },
            {
              "type": "RMG.ComplianceSystem.InternalAuditPreparation.IInternalAuditPreparationAppService"
            }
          ],
          "actions": {
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/internal-audit-preparation",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.InternalAuditPreparation.Dto.CreateUpdateInternalAuditPreparationDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.InternalAuditPreparation.Dto.CreateUpdateInternalAuditPreparationDto",
                  "typeSimple": "RMG.ComplianceSystem.InternalAuditPreparation.Dto.CreateUpdateInternalAuditPreparationDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.InternalAuditPreparation.Dto.CreateUpdateInternalAuditPreparationDto",
                  "typeSimple": "RMG.ComplianceSystem.InternalAuditPreparation.Dto.CreateUpdateInternalAuditPreparationDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.InternalAuditPreparation.Dto.InternalAuditPreparationDto",
                "typeSimple": "RMG.ComplianceSystem.InternalAuditPreparation.Dto.InternalAuditPreparationDto"
              },
              "allowAnonymous": null
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/internal-audit-preparation/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.InternalAuditPreparation.Dto.CreateUpdateInternalAuditPreparationDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.InternalAuditPreparation.Dto.CreateUpdateInternalAuditPreparationDto",
                  "typeSimple": "RMG.ComplianceSystem.InternalAuditPreparation.Dto.CreateUpdateInternalAuditPreparationDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.InternalAuditPreparation.Dto.CreateUpdateInternalAuditPreparationDto",
                  "typeSimple": "RMG.ComplianceSystem.InternalAuditPreparation.Dto.CreateUpdateInternalAuditPreparationDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.InternalAuditPreparation.Dto.InternalAuditPreparationDto",
                "typeSimple": "RMG.ComplianceSystem.InternalAuditPreparation.Dto.InternalAuditPreparationDto"
              },
              "allowAnonymous": null
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/internal-audit-preparation/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "GetListInternalAuditByFilterAsyncByInput": {
              "uniqueName": "GetListInternalAuditByFilterAsyncByInput",
              "name": "GetListInternalAuditByFilterAsync",
              "httpMethod": "GET",
              "url": "api/app/internal-audit-preparation/internal-audit-by-filter",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.InternalAuditPreparation.Dto.InternalAuditPreparationPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.InternalAuditPreparation.Dto.InternalAuditPreparationPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.InternalAuditPreparation.Dto.InternalAuditPreparationPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "FrameworkId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "DepartmentId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "IsApprove",
                  "jsonName": null,
                  "type": "System.Boolean?",
                  "typeSimple": "boolean?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "approveDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "ApproveBy",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.InternalAuditPreparation.Dto.InternalAuditPreparationDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.InternalAuditPreparation.Dto.InternalAuditPreparationDto>"
              },
              "allowAnonymous": null
            },
            "GetInternalAuditByIdAsyncById": {
              "uniqueName": "GetInternalAuditByIdAsyncById",
              "name": "GetInternalAuditByIdAsync",
              "httpMethod": "GET",
              "url": "api/app/internal-audit-preparation/internal-audit-by-id/{Id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "Id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "Id",
                  "name": "Id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.InternalAuditPreparation.Dto.InternalAuditPreparationDto",
                "typeSimple": "RMG.ComplianceSystem.InternalAuditPreparation.Dto.InternalAuditPreparationDto"
              },
              "allowAnonymous": null
            },
            "GetUsersByDeptIdAsyncByDeptId": {
              "uniqueName": "GetUsersByDeptIdAsyncByDeptId",
              "name": "GetUsersByDeptIdAsync",
              "httpMethod": "GET",
              "url": "api/app/internal-audit-preparation/users-by-dept-id/{DeptId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "DeptId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "DeptId",
                  "name": "DeptId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<RMG.ComplianceSystem.Employees.Dtos.EmployeeDto>",
                "typeSimple": "[RMG.ComplianceSystem.Employees.Dtos.EmployeeDto]"
              },
              "allowAnonymous": null
            },
            "GetRisksByFrameWorkeIdAsyncByFrmId": {
              "uniqueName": "GetRisksByFrameWorkeIdAsyncByFrmId",
              "name": "GetRisksByFrameWorkeIdAsync",
              "httpMethod": "GET",
              "url": "api/app/internal-audit-preparation/risks-by-frame-worke-id/{FrmId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "FrmId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "FrmId",
                  "name": "FrmId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<RMG.ComplianceSystem.Risks.Dtos.RiskAndOpportunityDto>",
                "typeSimple": "[RMG.ComplianceSystem.Risks.Dtos.RiskAndOpportunityDto]"
              },
              "allowAnonymous": null
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/internal-audit-preparation/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.InternalAuditPreparation.Dto.InternalAuditPreparationDto",
                "typeSimple": "RMG.ComplianceSystem.InternalAuditPreparation.Dto.InternalAuditPreparationDto"
              },
              "allowAnonymous": null
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/internal-audit-preparation",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.InternalAuditPreparation.Dto.InternalAuditPreparationPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.InternalAuditPreparation.Dto.InternalAuditPreparationPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.InternalAuditPreparation.Dto.InternalAuditPreparationPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "FrameworkId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "DepartmentId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "IsApprove",
                  "jsonName": null,
                  "type": "System.Boolean?",
                  "typeSimple": "boolean?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "approveDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "ApproveBy",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.InternalAuditPreparation.Dto.InternalAuditPreparationDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.InternalAuditPreparation.Dto.InternalAuditPreparationDto>"
              },
              "allowAnonymous": null
            }
          }
        },
        "RMG.ComplianceSystem.InternalAuditApproves.InternalAuditApproveAppService": {
          "controllerName": "InternalAuditApprove",
          "type": "RMG.ComplianceSystem.InternalAuditApproves.InternalAuditApproveAppService",
          "interfaces": [
            {
              "type": "Volo.Abp.Validation.IValidationEnabled"
            },
            {
              "type": "Volo.Abp.Auditing.IAuditingEnabled"
            },
            {
              "type": "Volo.Abp.GlobalFeatures.IGlobalFeatureCheckingEnabled"
            },
            {
              "type": "RMG.ComplianceSystem.InternalAuditApproves.IInternalAuditApproveAppService"
            }
          ],
          "actions": {
            "GetListAuditAppoveByFilterAsyncByInput": {
              "uniqueName": "GetListAuditAppoveByFilterAsyncByInput",
              "name": "GetListAuditAppoveByFilterAsync",
              "httpMethod": "GET",
              "url": "api/app/internal-audit-approve/audit-appove-by-filter",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.InternalAuditApproves.InternalAuditApprovePagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.InternalAuditApproves.InternalAuditApprovePagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.InternalAuditApproves.InternalAuditApprovePagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "IsApprove",
                  "jsonName": null,
                  "type": "System.Boolean?",
                  "typeSimple": "boolean?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "approveDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "ApproveBy",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.InternalAuditApproves.InternalAuditApproveDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.InternalAuditApproves.InternalAuditApproveDto>"
              },
              "allowAnonymous": null
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/internal-audit-approve",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.InternalAuditApproves.CreateUpdateInternalAuditApproveDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.InternalAuditApproves.CreateUpdateInternalAuditApproveDto",
                  "typeSimple": "RMG.ComplianceSystem.InternalAuditApproves.CreateUpdateInternalAuditApproveDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.InternalAuditApproves.CreateUpdateInternalAuditApproveDto",
                  "typeSimple": "RMG.ComplianceSystem.InternalAuditApproves.CreateUpdateInternalAuditApproveDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.InternalAuditApproves.InternalAuditApproveDto",
                "typeSimple": "RMG.ComplianceSystem.InternalAuditApproves.InternalAuditApproveDto"
              },
              "allowAnonymous": null
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/internal-audit-approve/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.InternalAuditApproves.CreateUpdateInternalAuditApproveDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.InternalAuditApproves.CreateUpdateInternalAuditApproveDto",
                  "typeSimple": "RMG.ComplianceSystem.InternalAuditApproves.CreateUpdateInternalAuditApproveDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.InternalAuditApproves.CreateUpdateInternalAuditApproveDto",
                  "typeSimple": "RMG.ComplianceSystem.InternalAuditApproves.CreateUpdateInternalAuditApproveDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.InternalAuditApproves.InternalAuditApproveDto",
                "typeSimple": "RMG.ComplianceSystem.InternalAuditApproves.InternalAuditApproveDto"
              },
              "allowAnonymous": null
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/internal-audit-approve/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/internal-audit-approve/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.InternalAuditApproves.InternalAuditApproveDto",
                "typeSimple": "RMG.ComplianceSystem.InternalAuditApproves.InternalAuditApproveDto"
              },
              "allowAnonymous": null
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/internal-audit-approve",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.InternalAuditApproves.InternalAuditApprovePagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.InternalAuditApproves.InternalAuditApprovePagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.InternalAuditApproves.InternalAuditApprovePagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "IsApprove",
                  "jsonName": null,
                  "type": "System.Boolean?",
                  "typeSimple": "boolean?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "approveDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "ApproveBy",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.InternalAuditApproves.InternalAuditApproveDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.InternalAuditApproves.InternalAuditApproveDto>"
              },
              "allowAnonymous": null
            }
          }
        },
        "RMG.ComplianceSystem.Helpers.HelperAppService": {
          "controllerName": "Helper",
          "type": "RMG.ComplianceSystem.Helpers.HelperAppService",
          "interfaces": [
            {
              "type": "Volo.Abp.Validation.IValidationEnabled"
            },
            {
              "type": "Volo.Abp.Auditing.IAuditingEnabled"
            },
            {
              "type": "Volo.Abp.GlobalFeatures.IGlobalFeatureCheckingEnabled"
            }
          ],
          "actions": {
            "GetEncryptedDataByValue": {
              "uniqueName": "GetEncryptedDataByValue",
              "name": "GetEncryptedData",
              "httpMethod": "GET",
              "url": "api/app/helper/encrypted-data",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "value",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "value",
                  "name": "value",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Helpers.DataDecryptedReturnDto",
                "typeSimple": "RMG.ComplianceSystem.Helpers.DataDecryptedReturnDto"
              },
              "allowAnonymous": null
            },
            "GetDecryptedDataByValue": {
              "uniqueName": "GetDecryptedDataByValue",
              "name": "GetDecryptedData",
              "httpMethod": "GET",
              "url": "api/app/helper/decrypted-data",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "value",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "value",
                  "name": "value",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Helpers.DataDecryptedReturnDto",
                "typeSimple": "RMG.ComplianceSystem.Helpers.DataDecryptedReturnDto"
              },
              "allowAnonymous": null
            }
          }
        },
        "RMG.ComplianceSystem.Frameworks.FrameworkAppService": {
          "controllerName": "Framework",
          "type": "RMG.ComplianceSystem.Frameworks.FrameworkAppService",
          "interfaces": [
            {
              "type": "Volo.Abp.Validation.IValidationEnabled"
            },
            {
              "type": "Volo.Abp.Auditing.IAuditingEnabled"
            },
            {
              "type": "Volo.Abp.GlobalFeatures.IGlobalFeatureCheckingEnabled"
            },
            {
              "type": "RMG.ComplianceSystem.Frameworks.IFrameworkAppService"
            }
          ],
          "actions": {
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/framework",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Frameworks.Dtos.CreateUpdateFrameworkDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Frameworks.Dtos.CreateUpdateFrameworkDto",
                  "typeSimple": "RMG.ComplianceSystem.Frameworks.Dtos.CreateUpdateFrameworkDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Frameworks.Dtos.CreateUpdateFrameworkDto",
                  "typeSimple": "RMG.ComplianceSystem.Frameworks.Dtos.CreateUpdateFrameworkDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkDto",
                "typeSimple": "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkDto"
              },
              "allowAnonymous": null
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/framework/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Frameworks.Dtos.CreateUpdateFrameworkDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Frameworks.Dtos.CreateUpdateFrameworkDto",
                  "typeSimple": "RMG.ComplianceSystem.Frameworks.Dtos.CreateUpdateFrameworkDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Frameworks.Dtos.CreateUpdateFrameworkDto",
                  "typeSimple": "RMG.ComplianceSystem.Frameworks.Dtos.CreateUpdateFrameworkDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkDto",
                "typeSimple": "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkDto"
              },
              "allowAnonymous": null
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/framework/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkDto",
                "typeSimple": "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkDto"
              },
              "allowAnonymous": null
            },
            "GetFrameworkListLookupAsync": {
              "uniqueName": "GetFrameworkListLookupAsync",
              "name": "GetFrameworkListLookupAsync",
              "httpMethod": "GET",
              "url": "api/app/framework/framework-list-lookup",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<RMG.ComplianceSystem.Frameworks.Dtos.FrameworkDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<RMG.ComplianceSystem.Frameworks.Dtos.FrameworkDto>"
              },
              "allowAnonymous": false
            },
            "GetFrameWorkWithAssesmentBYIdByInput": {
              "uniqueName": "GetFrameWorkWithAssesmentBYIdByInput",
              "name": "GetFrameWorkWithAssesmentBYId",
              "httpMethod": "GET",
              "url": "api/app/framework/frame-work-with-assesment-bYId",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Frameworks.Dtos.getFrameworkDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Frameworks.Dtos.getFrameworkDto",
                  "typeSimple": "RMG.ComplianceSystem.Frameworks.Dtos.getFrameworkDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "FrameworkId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkData",
                "typeSimple": "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkData"
              },
              "allowAnonymous": null
            },
            "SendToReviewerById": {
              "uniqueName": "SendToReviewerById",
              "name": "SendToReviewer",
              "httpMethod": "PUT",
              "url": "api/app/framework/{id}/send-to-reviewer",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "SendToOwnerById": {
              "uniqueName": "SendToOwnerById",
              "name": "SendToOwner",
              "httpMethod": "PUT",
              "url": "api/app/framework/{id}/send-to-owner",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "ReturnToCreatorByIdAndInput": {
              "uniqueName": "ReturnToCreatorByIdAndInput",
              "name": "ReturnToCreator",
              "httpMethod": "PUT",
              "url": "api/app/framework/{id}/return-to-creator",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Frameworks.Dtos.RejectFrameworkDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Frameworks.Dtos.RejectFrameworkDto",
                  "typeSimple": "RMG.ComplianceSystem.Frameworks.Dtos.RejectFrameworkDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Frameworks.Dtos.RejectFrameworkDto",
                  "typeSimple": "RMG.ComplianceSystem.Frameworks.Dtos.RejectFrameworkDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "ApproveById": {
              "uniqueName": "ApproveById",
              "name": "Approve",
              "httpMethod": "PUT",
              "url": "api/app/framework/{id}/approve",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "StartSelfAssessmentById": {
              "uniqueName": "StartSelfAssessmentById",
              "name": "StartSelfAssessment",
              "httpMethod": "PUT",
              "url": "api/app/framework/{id}/start-self-assessment",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false
            },
            "ActivateById": {
              "uniqueName": "ActivateById",
              "name": "Activate",
              "httpMethod": "PUT",
              "url": "api/app/framework/{id}/activate",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false
            },
            "DeactivateById": {
              "uniqueName": "DeactivateById",
              "name": "Deactivate",
              "httpMethod": "PUT",
              "url": "api/app/framework/{id}/deactivate",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/framework/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/framework",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Status",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Shared.SharedStatus?",
                  "typeSimple": "RMG.ComplianceSystem.Shared.SharedStatus?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "FrameworkStatus",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Shared.FrameworkStatus?",
                  "typeSimple": "RMG.ComplianceSystem.Shared.FrameworkStatus?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Frameworks.Dtos.FrameworkDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Frameworks.Dtos.FrameworkDto>"
              },
              "allowAnonymous": null
            }
          }
        },
        "RMG.ComplianceSystem.Frameworks.FrameworkEmployeeAppService": {
          "controllerName": "FrameworkEmployee",
          "type": "RMG.ComplianceSystem.Frameworks.FrameworkEmployeeAppService",
          "interfaces": [
            {
              "type": "Volo.Abp.Validation.IValidationEnabled"
            },
            {
              "type": "Volo.Abp.Auditing.IAuditingEnabled"
            },
            {
              "type": "Volo.Abp.GlobalFeatures.IGlobalFeatureCheckingEnabled"
            },
            {
              "type": "RMG.ComplianceSystem.Framework.IFrameworkEmployeeAppService"
            }
          ],
          "actions": {
            "GetFrameworkEmployeesByInput": {
              "uniqueName": "GetFrameworkEmployeesByInput",
              "name": "GetFrameworkEmployees",
              "httpMethod": "GET",
              "url": "api/app/framework-employee/framework-employees",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Frameworks.Dtos.getFrameworkDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Frameworks.Dtos.getFrameworkDto",
                  "typeSimple": "RMG.ComplianceSystem.Frameworks.Dtos.getFrameworkDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "FrameworkId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<RMG.ComplianceSystem.Frameworks.Dtos.FrameworkEmployeeDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<RMG.ComplianceSystem.Frameworks.Dtos.FrameworkEmployeeDto>"
              },
              "allowAnonymous": null
            },
            "GetFrameworkEmployeeListLookupAsync": {
              "uniqueName": "GetFrameworkEmployeeListLookupAsync",
              "name": "GetFrameworkEmployeeListLookupAsync",
              "httpMethod": "GET",
              "url": "api/app/framework-employee/framework-employee-list-lookup",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<RMG.ComplianceSystem.Frameworks.Dtos.FrameworkEmployeeDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<RMG.ComplianceSystem.Frameworks.Dtos.FrameworkEmployeeDto>"
              },
              "allowAnonymous": false
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/framework-employee",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Frameworks.Dtos.CreateUpdateFrameworkEmployeeDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Frameworks.Dtos.CreateUpdateFrameworkEmployeeDto",
                  "typeSimple": "RMG.ComplianceSystem.Frameworks.Dtos.CreateUpdateFrameworkEmployeeDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Frameworks.Dtos.CreateUpdateFrameworkEmployeeDto",
                  "typeSimple": "RMG.ComplianceSystem.Frameworks.Dtos.CreateUpdateFrameworkEmployeeDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkEmployeeDto",
                "typeSimple": "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkEmployeeDto"
              },
              "allowAnonymous": null
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/framework-employee/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Frameworks.Dtos.CreateUpdateFrameworkEmployeeDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Frameworks.Dtos.CreateUpdateFrameworkEmployeeDto",
                  "typeSimple": "RMG.ComplianceSystem.Frameworks.Dtos.CreateUpdateFrameworkEmployeeDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Frameworks.Dtos.CreateUpdateFrameworkEmployeeDto",
                  "typeSimple": "RMG.ComplianceSystem.Frameworks.Dtos.CreateUpdateFrameworkEmployeeDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkEmployeeDto",
                "typeSimple": "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkEmployeeDto"
              },
              "allowAnonymous": null
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/framework-employee/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/framework-employee/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkEmployeeDto",
                "typeSimple": "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkEmployeeDto"
              },
              "allowAnonymous": null
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/framework-employee",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkEmployeePagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkEmployeePagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkEmployeePagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "FrameworkId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "EmployeeId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Frameworks.Dtos.FrameworkEmployeeDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Frameworks.Dtos.FrameworkEmployeeDto>"
              },
              "allowAnonymous": null
            }
          }
        },
        "RMG.ComplianceSystem.Employees.EmployeeAppService": {
          "controllerName": "Employee",
          "type": "RMG.ComplianceSystem.Employees.EmployeeAppService",
          "interfaces": [
            {
              "type": "Volo.Abp.Validation.IValidationEnabled"
            },
            {
              "type": "Volo.Abp.Auditing.IAuditingEnabled"
            },
            {
              "type": "Volo.Abp.GlobalFeatures.IGlobalFeatureCheckingEnabled"
            },
            {
              "type": "RMG.ComplianceSystem.Employees.IEmployeeAppService"
            }
          ],
          "actions": {
            "GetEmployeeListLookupAsync": {
              "uniqueName": "GetEmployeeListLookupAsync",
              "name": "GetEmployeeListLookupAsync",
              "httpMethod": "GET",
              "url": "api/app/employee/employee-list-lookup",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<RMG.ComplianceSystem.Employees.Dtos.EmployeeDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<RMG.ComplianceSystem.Employees.Dtos.EmployeeDto>"
              },
              "allowAnonymous": false
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/employee",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Employees.Dtos.CreateUpdateEmployeeDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Employees.Dtos.CreateUpdateEmployeeDto",
                  "typeSimple": "RMG.ComplianceSystem.Employees.Dtos.CreateUpdateEmployeeDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Employees.Dtos.CreateUpdateEmployeeDto",
                  "typeSimple": "RMG.ComplianceSystem.Employees.Dtos.CreateUpdateEmployeeDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Employees.Dtos.EmployeeDto",
                "typeSimple": "RMG.ComplianceSystem.Employees.Dtos.EmployeeDto"
              },
              "allowAnonymous": null
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/employee/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Employees.Dtos.CreateUpdateEmployeeDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Employees.Dtos.CreateUpdateEmployeeDto",
                  "typeSimple": "RMG.ComplianceSystem.Employees.Dtos.CreateUpdateEmployeeDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Employees.Dtos.CreateUpdateEmployeeDto",
                  "typeSimple": "RMG.ComplianceSystem.Employees.Dtos.CreateUpdateEmployeeDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Employees.Dtos.EmployeeDto",
                "typeSimple": "RMG.ComplianceSystem.Employees.Dtos.EmployeeDto"
              },
              "allowAnonymous": null
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/employee/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/employee/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Employees.Dtos.EmployeeDto",
                "typeSimple": "RMG.ComplianceSystem.Employees.Dtos.EmployeeDto"
              },
              "allowAnonymous": null
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/employee",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Employees.Dtos.EmployeePagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Employees.Dtos.EmployeePagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.Employees.Dtos.EmployeePagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Employees.Dtos.EmployeeDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Employees.Dtos.EmployeeDto>"
              },
              "allowAnonymous": null
            }
          }
        },
        "RMG.ComplianceSystem.EmailTemplates.EmailTemplateAppService": {
          "controllerName": "EmailTemplate",
          "type": "RMG.ComplianceSystem.EmailTemplates.EmailTemplateAppService",
          "interfaces": [
            {
              "type": "Volo.Abp.Validation.IValidationEnabled"
            },
            {
              "type": "Volo.Abp.Auditing.IAuditingEnabled"
            },
            {
              "type": "Volo.Abp.GlobalFeatures.IGlobalFeatureCheckingEnabled"
            },
            {
              "type": "RMG.ComplianceSystem.EmailTemplates.IEmailTemplateAppService"
            }
          ],
          "actions": {
            "GetListDeletedAsyncByInput": {
              "uniqueName": "GetListDeletedAsyncByInput",
              "name": "GetListDeletedAsync",
              "httpMethod": "GET",
              "url": "api/app/email-template/deleted",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplatePagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplatePagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplatePagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Key",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Subject",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplateDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplateDto>"
              },
              "allowAnonymous": null
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/email-template",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.EmailTemplates.Dtos.CreateUpdateEmailTemplateDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.EmailTemplates.Dtos.CreateUpdateEmailTemplateDto",
                  "typeSimple": "RMG.ComplianceSystem.EmailTemplates.Dtos.CreateUpdateEmailTemplateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.EmailTemplates.Dtos.CreateUpdateEmailTemplateDto",
                  "typeSimple": "RMG.ComplianceSystem.EmailTemplates.Dtos.CreateUpdateEmailTemplateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplateDto",
                "typeSimple": "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplateDto"
              },
              "allowAnonymous": null
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/email-template/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.EmailTemplates.Dtos.CreateUpdateEmailTemplateDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.EmailTemplates.Dtos.CreateUpdateEmailTemplateDto",
                  "typeSimple": "RMG.ComplianceSystem.EmailTemplates.Dtos.CreateUpdateEmailTemplateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.EmailTemplates.Dtos.CreateUpdateEmailTemplateDto",
                  "typeSimple": "RMG.ComplianceSystem.EmailTemplates.Dtos.CreateUpdateEmailTemplateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplateDto",
                "typeSimple": "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplateDto"
              },
              "allowAnonymous": null
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/email-template/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/email-template/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplateDto",
                "typeSimple": "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplateDto"
              },
              "allowAnonymous": null
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/email-template",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplatePagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplatePagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplatePagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Key",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Subject",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplateDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplateDto>"
              },
              "allowAnonymous": null
            }
          }
        },
        "RMG.ComplianceSystem.EmailTemplates.TemplateEmailtestAppService": {
          "controllerName": "TemplateEmailtest",
          "type": "RMG.ComplianceSystem.EmailTemplates.TemplateEmailtestAppService",
          "interfaces": [
            {
              "type": "Volo.Abp.Validation.IValidationEnabled"
            },
            {
              "type": "Volo.Abp.Auditing.IAuditingEnabled"
            },
            {
              "type": "Volo.Abp.GlobalFeatures.IGlobalFeatureCheckingEnabled"
            },
            {
              "type": "RMG.ComplianceSystem.EmailTemplates.IEmailTemplateAppService"
            }
          ],
          "actions": {
            "RenderTemplateByTemplateKeyAndData": {
              "uniqueName": "RenderTemplateByTemplateKeyAndData",
              "name": "RenderTemplate",
              "httpMethod": "POST",
              "url": "api/app/template-emailtest/render-template",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "TemplateKey",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "data",
                  "typeAsString": "System.Dynamic.ExpandoObject, System.Linq.Expressions",
                  "type": "System.Dynamic.ExpandoObject",
                  "typeSimple": "{string:object}",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "TemplateKey",
                  "name": "TemplateKey",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "data",
                  "name": "data",
                  "jsonName": null,
                  "type": "System.Dynamic.ExpandoObject",
                  "typeSimple": "{string:object}",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplateDto",
                "typeSimple": "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplateDto"
              },
              "allowAnonymous": null
            },
            "RenderTemplateNotificationByTemplateKeyAndData": {
              "uniqueName": "RenderTemplateNotificationByTemplateKeyAndData",
              "name": "RenderTemplateNotification",
              "httpMethod": "POST",
              "url": "api/app/template-emailtest/render-template-notification",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "TemplateKey",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "data",
                  "typeAsString": "System.Dynamic.ExpandoObject, System.Linq.Expressions",
                  "type": "System.Dynamic.ExpandoObject",
                  "typeSimple": "{string:object}",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "TemplateKey",
                  "name": "TemplateKey",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "data",
                  "name": "data",
                  "jsonName": null,
                  "type": "System.Dynamic.ExpandoObject",
                  "typeSimple": "{string:object}",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplateDto",
                "typeSimple": "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplateDto"
              },
              "allowAnonymous": null
            },
            "GetListDeletedAsyncByInput": {
              "uniqueName": "GetListDeletedAsyncByInput",
              "name": "GetListDeletedAsync",
              "httpMethod": "GET",
              "url": "api/app/template-emailtest/deleted",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplatePagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplatePagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplatePagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Key",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Subject",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplateDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplateDto>"
              },
              "allowAnonymous": null
            },
            "GetListByFilterByInput": {
              "uniqueName": "GetListByFilterByInput",
              "name": "GetListByFilter",
              "httpMethod": "GET",
              "url": "api/app/template-emailtest/by-filter",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplatePagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplatePagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplatePagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Key",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Subject",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplateDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplateDto>"
              },
              "allowAnonymous": null
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/template-emailtest",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.EmailTemplates.Dtos.CreateUpdateEmailTemplateDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.EmailTemplates.Dtos.CreateUpdateEmailTemplateDto",
                  "typeSimple": "RMG.ComplianceSystem.EmailTemplates.Dtos.CreateUpdateEmailTemplateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.EmailTemplates.Dtos.CreateUpdateEmailTemplateDto",
                  "typeSimple": "RMG.ComplianceSystem.EmailTemplates.Dtos.CreateUpdateEmailTemplateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplateDto",
                "typeSimple": "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplateDto"
              },
              "allowAnonymous": null
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/template-emailtest/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.EmailTemplates.Dtos.CreateUpdateEmailTemplateDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.EmailTemplates.Dtos.CreateUpdateEmailTemplateDto",
                  "typeSimple": "RMG.ComplianceSystem.EmailTemplates.Dtos.CreateUpdateEmailTemplateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.EmailTemplates.Dtos.CreateUpdateEmailTemplateDto",
                  "typeSimple": "RMG.ComplianceSystem.EmailTemplates.Dtos.CreateUpdateEmailTemplateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplateDto",
                "typeSimple": "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplateDto"
              },
              "allowAnonymous": null
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/template-emailtest/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/template-emailtest/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplateDto",
                "typeSimple": "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplateDto"
              },
              "allowAnonymous": null
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/template-emailtest",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplatePagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplatePagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplatePagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Key",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Subject",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplateDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplateDto>"
              },
              "allowAnonymous": null
            }
          }
        },
        "RMG.ComplianceSystem.Domains.DomainAppService": {
          "controllerName": "Domain",
          "type": "RMG.ComplianceSystem.Domains.DomainAppService",
          "interfaces": [
            {
              "type": "Volo.Abp.Validation.IValidationEnabled"
            },
            {
              "type": "Volo.Abp.Auditing.IAuditingEnabled"
            },
            {
              "type": "Volo.Abp.GlobalFeatures.IGlobalFeatureCheckingEnabled"
            },
            {
              "type": "RMG.ComplianceSystem.Domains.IDomainAppService"
            }
          ],
          "actions": {
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/domain",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Domains.Dtos.CreateUpdateDomainDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Domains.Dtos.CreateUpdateDomainDto",
                  "typeSimple": "RMG.ComplianceSystem.Domains.Dtos.CreateUpdateDomainDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Domains.Dtos.CreateUpdateDomainDto",
                  "typeSimple": "RMG.ComplianceSystem.Domains.Dtos.CreateUpdateDomainDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Domains.Dtos.DomainDto",
                "typeSimple": "RMG.ComplianceSystem.Domains.Dtos.DomainDto"
              },
              "allowAnonymous": null
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/domain/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Domains.Dtos.CreateUpdateDomainDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Domains.Dtos.CreateUpdateDomainDto",
                  "typeSimple": "RMG.ComplianceSystem.Domains.Dtos.CreateUpdateDomainDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Domains.Dtos.CreateUpdateDomainDto",
                  "typeSimple": "RMG.ComplianceSystem.Domains.Dtos.CreateUpdateDomainDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Domains.Dtos.DomainDto",
                "typeSimple": "RMG.ComplianceSystem.Domains.Dtos.DomainDto"
              },
              "allowAnonymous": null
            },
            "GetListWithoutPagingAsyncByInput": {
              "uniqueName": "GetListWithoutPagingAsyncByInput",
              "name": "GetListWithoutPagingAsync",
              "httpMethod": "GET",
              "url": "api/app/domain/without-paging",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Domains.Dtos.DomainPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Domains.Dtos.DomainPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.Domains.Dtos.DomainPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "FrameworkId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MainDomainId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "IsMainDomain",
                  "jsonName": null,
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Status",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Shared.SharedStatus?",
                  "typeSimple": "RMG.ComplianceSystem.Shared.SharedStatus?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<RMG.ComplianceSystem.Domains.Dtos.DomainWithoutPagingDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<RMG.ComplianceSystem.Domains.Dtos.DomainWithoutPagingDto>"
              },
              "allowAnonymous": false
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/domain/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/domain/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Domains.Dtos.DomainDto",
                "typeSimple": "RMG.ComplianceSystem.Domains.Dtos.DomainDto"
              },
              "allowAnonymous": null
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/domain",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Domains.Dtos.DomainPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Domains.Dtos.DomainPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.Domains.Dtos.DomainPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "FrameworkId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MainDomainId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "IsMainDomain",
                  "jsonName": null,
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Status",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Shared.SharedStatus?",
                  "typeSimple": "RMG.ComplianceSystem.Shared.SharedStatus?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Domains.Dtos.DomainDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Domains.Dtos.DomainDto>"
              },
              "allowAnonymous": null
            }
          }
        },
        "RMG.ComplianceSystem.DocumentCategorys.DocumentCategoryAppService": {
          "controllerName": "DocumentCategory",
          "type": "RMG.ComplianceSystem.DocumentCategorys.DocumentCategoryAppService",
          "interfaces": [
            {
              "type": "Volo.Abp.Validation.IValidationEnabled"
            },
            {
              "type": "Volo.Abp.Auditing.IAuditingEnabled"
            },
            {
              "type": "Volo.Abp.GlobalFeatures.IGlobalFeatureCheckingEnabled"
            },
            {
              "type": "RMG.ComplianceSystem.Documents.IDocumentCategoryAppService"
            }
          ],
          "actions": {
            "getDocumentCategoriesByInput": {
              "uniqueName": "getDocumentCategoriesByInput",
              "name": "getDocumentCategories",
              "httpMethod": "GET",
              "url": "api/app/document-category/get-document-categories",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Documents.Dtos.DocCategoryPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Documents.Dtos.DocCategoryPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.Documents.Dtos.DocCategoryPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<RMG.ComplianceSystem.Documents.Dtos.DocumentCategoryDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<RMG.ComplianceSystem.Documents.Dtos.DocumentCategoryDto>"
              },
              "allowAnonymous": null
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/document-category",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Documents.Dtos.CreateUpdateDocumentCategoryDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Documents.Dtos.CreateUpdateDocumentCategoryDto",
                  "typeSimple": "RMG.ComplianceSystem.Documents.Dtos.CreateUpdateDocumentCategoryDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Documents.Dtos.CreateUpdateDocumentCategoryDto",
                  "typeSimple": "RMG.ComplianceSystem.Documents.Dtos.CreateUpdateDocumentCategoryDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Documents.Dtos.DocumentCategoryDto",
                "typeSimple": "RMG.ComplianceSystem.Documents.Dtos.DocumentCategoryDto"
              },
              "allowAnonymous": null
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/document-category/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Documents.Dtos.CreateUpdateDocumentCategoryDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Documents.Dtos.CreateUpdateDocumentCategoryDto",
                  "typeSimple": "RMG.ComplianceSystem.Documents.Dtos.CreateUpdateDocumentCategoryDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Documents.Dtos.CreateUpdateDocumentCategoryDto",
                  "typeSimple": "RMG.ComplianceSystem.Documents.Dtos.CreateUpdateDocumentCategoryDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Documents.Dtos.DocumentCategoryDto",
                "typeSimple": "RMG.ComplianceSystem.Documents.Dtos.DocumentCategoryDto"
              },
              "allowAnonymous": null
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/document-category/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/document-category/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Documents.Dtos.DocumentCategoryDto",
                "typeSimple": "RMG.ComplianceSystem.Documents.Dtos.DocumentCategoryDto"
              },
              "allowAnonymous": null
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/document-category",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Documents.Dtos.DocCategoryPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Documents.Dtos.DocCategoryPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.Documents.Dtos.DocCategoryPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Documents.Dtos.DocumentCategoryDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Documents.Dtos.DocumentCategoryDto>"
              },
              "allowAnonymous": null
            }
          }
        },
        "RMG.ComplianceSystem.Policies.DocumentAppService": {
          "controllerName": "Document",
          "type": "RMG.ComplianceSystem.Policies.DocumentAppService",
          "interfaces": [
            {
              "type": "Volo.Abp.Validation.IValidationEnabled"
            },
            {
              "type": "Volo.Abp.Auditing.IAuditingEnabled"
            },
            {
              "type": "Volo.Abp.GlobalFeatures.IGlobalFeatureCheckingEnabled"
            },
            {
              "type": "RMG.ComplianceSystem.Documents.IDocumentAppService"
            }
          ],
          "actions": {
            "GetListDocumentByCategoryAsyncByInput": {
              "uniqueName": "GetListDocumentByCategoryAsyncByInput",
              "name": "GetListDocumentByCategoryAsync",
              "httpMethod": "GET",
              "url": "api/app/document/document-by-category",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Documents.Dtos.DocPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Documents.Dtos.DocPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.Documents.Dtos.DocPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "CategoryId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Documents.Dtos.DocumentDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Documents.Dtos.DocumentDto>"
              },
              "allowAnonymous": null
            },
            "GetByIdAsyncById": {
              "uniqueName": "GetByIdAsyncById",
              "name": "GetByIdAsync",
              "httpMethod": "GET",
              "url": "api/app/document/by-id/{Id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "Id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "Id",
                  "name": "Id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Documents.Dtos.DocumentDto",
                "typeSimple": "RMG.ComplianceSystem.Documents.Dtos.DocumentDto"
              },
              "allowAnonymous": null
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/document",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Documents.Dtos.CreateUpdateDocumentDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Documents.Dtos.CreateUpdateDocumentDto",
                  "typeSimple": "RMG.ComplianceSystem.Documents.Dtos.CreateUpdateDocumentDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Documents.Dtos.CreateUpdateDocumentDto",
                  "typeSimple": "RMG.ComplianceSystem.Documents.Dtos.CreateUpdateDocumentDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Documents.Dtos.DocumentDto",
                "typeSimple": "RMG.ComplianceSystem.Documents.Dtos.DocumentDto"
              },
              "allowAnonymous": null
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/document/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Documents.Dtos.CreateUpdateDocumentDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Documents.Dtos.CreateUpdateDocumentDto",
                  "typeSimple": "RMG.ComplianceSystem.Documents.Dtos.CreateUpdateDocumentDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Documents.Dtos.CreateUpdateDocumentDto",
                  "typeSimple": "RMG.ComplianceSystem.Documents.Dtos.CreateUpdateDocumentDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Documents.Dtos.DocumentDto",
                "typeSimple": "RMG.ComplianceSystem.Documents.Dtos.DocumentDto"
              },
              "allowAnonymous": null
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/document/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/document/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Documents.Dtos.DocumentDto",
                "typeSimple": "RMG.ComplianceSystem.Documents.Dtos.DocumentDto"
              },
              "allowAnonymous": null
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/document",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Documents.Dtos.DocPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Documents.Dtos.DocPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.Documents.Dtos.DocPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "CategoryId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Documents.Dtos.DocumentDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Documents.Dtos.DocumentDto>"
              },
              "allowAnonymous": null
            }
          }
        },
        "RMG.ComplianceSystem.DepartmentUsers.DepartmentUserAppService": {
          "controllerName": "DepartmentUser",
          "type": "RMG.ComplianceSystem.DepartmentUsers.DepartmentUserAppService",
          "interfaces": [
            {
              "type": "Volo.Abp.Validation.IValidationEnabled"
            },
            {
              "type": "Volo.Abp.Auditing.IAuditingEnabled"
            },
            {
              "type": "Volo.Abp.GlobalFeatures.IGlobalFeatureCheckingEnabled"
            },
            {
              "type": "RMG.ComplianceSystem.DepartmentUsers.IDepartmentUserAppService"
            }
          ],
          "actions": {
            "GetListDeptUsersByFilterAsyncByInput": {
              "uniqueName": "GetListDeptUsersByFilterAsyncByInput",
              "name": "GetListDeptUsersByFilterAsync",
              "httpMethod": "GET",
              "url": "api/app/department-user/dept-users-by-filter",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.DepartmentUsers.DepartmentUserPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.DepartmentUsers.DepartmentUserPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.DepartmentUsers.DepartmentUserPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "DepartmentId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "UserId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.DepartmentUsers.DepartmentUserDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.DepartmentUsers.DepartmentUserDto>"
              },
              "allowAnonymous": null
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/department-user",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.DepartmentUsers.CreateUpdateDepartmentUserDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.DepartmentUsers.CreateUpdateDepartmentUserDto",
                  "typeSimple": "RMG.ComplianceSystem.DepartmentUsers.CreateUpdateDepartmentUserDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.DepartmentUsers.CreateUpdateDepartmentUserDto",
                  "typeSimple": "RMG.ComplianceSystem.DepartmentUsers.CreateUpdateDepartmentUserDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.DepartmentUsers.DepartmentUserDto",
                "typeSimple": "RMG.ComplianceSystem.DepartmentUsers.DepartmentUserDto"
              },
              "allowAnonymous": null
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/department-user/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.DepartmentUsers.CreateUpdateDepartmentUserDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.DepartmentUsers.CreateUpdateDepartmentUserDto",
                  "typeSimple": "RMG.ComplianceSystem.DepartmentUsers.CreateUpdateDepartmentUserDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.DepartmentUsers.CreateUpdateDepartmentUserDto",
                  "typeSimple": "RMG.ComplianceSystem.DepartmentUsers.CreateUpdateDepartmentUserDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.DepartmentUsers.DepartmentUserDto",
                "typeSimple": "RMG.ComplianceSystem.DepartmentUsers.DepartmentUserDto"
              },
              "allowAnonymous": null
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/department-user/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/department-user/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.DepartmentUsers.DepartmentUserDto",
                "typeSimple": "RMG.ComplianceSystem.DepartmentUsers.DepartmentUserDto"
              },
              "allowAnonymous": null
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/department-user",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.DepartmentUsers.DepartmentUserPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.DepartmentUsers.DepartmentUserPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.DepartmentUsers.DepartmentUserPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "DepartmentId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "UserId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.DepartmentUsers.DepartmentUserDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.DepartmentUsers.DepartmentUserDto>"
              },
              "allowAnonymous": null
            }
          }
        },
        "RMG.ComplianceSystem.Departments.DepartmentAppService": {
          "controllerName": "Department",
          "type": "RMG.ComplianceSystem.Departments.DepartmentAppService",
          "interfaces": [
            {
              "type": "Volo.Abp.Validation.IValidationEnabled"
            },
            {
              "type": "Volo.Abp.Auditing.IAuditingEnabled"
            },
            {
              "type": "Volo.Abp.GlobalFeatures.IGlobalFeatureCheckingEnabled"
            },
            {
              "type": "RMG.ComplianceSystem.Departments.IDepartmentAppService"
            }
          ],
          "actions": {
            "GetDepartmentListLookupAsync": {
              "uniqueName": "GetDepartmentListLookupAsync",
              "name": "GetDepartmentListLookupAsync",
              "httpMethod": "GET",
              "url": "api/app/department/department-list-lookup",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<RMG.ComplianceSystem.Departments.Dtos.DepartmentDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<RMG.ComplianceSystem.Departments.Dtos.DepartmentDto>"
              },
              "allowAnonymous": false
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/department",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Departments.Dtos.CreateUpdateDepartmentDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Departments.Dtos.CreateUpdateDepartmentDto",
                  "typeSimple": "RMG.ComplianceSystem.Departments.Dtos.CreateUpdateDepartmentDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Departments.Dtos.CreateUpdateDepartmentDto",
                  "typeSimple": "RMG.ComplianceSystem.Departments.Dtos.CreateUpdateDepartmentDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Departments.Dtos.DepartmentDto",
                "typeSimple": "RMG.ComplianceSystem.Departments.Dtos.DepartmentDto"
              },
              "allowAnonymous": null
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/department/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Departments.Dtos.CreateUpdateDepartmentDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Departments.Dtos.CreateUpdateDepartmentDto",
                  "typeSimple": "RMG.ComplianceSystem.Departments.Dtos.CreateUpdateDepartmentDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Departments.Dtos.CreateUpdateDepartmentDto",
                  "typeSimple": "RMG.ComplianceSystem.Departments.Dtos.CreateUpdateDepartmentDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Departments.Dtos.DepartmentDto",
                "typeSimple": "RMG.ComplianceSystem.Departments.Dtos.DepartmentDto"
              },
              "allowAnonymous": null
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/department/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/department/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Departments.Dtos.DepartmentDto",
                "typeSimple": "RMG.ComplianceSystem.Departments.Dtos.DepartmentDto"
              },
              "allowAnonymous": null
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/department",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Departments.Dtos.DepartmentPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Departments.Dtos.DepartmentPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.Departments.Dtos.DepartmentPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Departments.Dtos.DepartmentDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Departments.Dtos.DepartmentDto>"
              },
              "allowAnonymous": null
            }
          }
        },
        "RMG.ComplianceSystem.Controls.ControlAppService": {
          "controllerName": "Control",
          "type": "RMG.ComplianceSystem.Controls.ControlAppService",
          "interfaces": [
            {
              "type": "Volo.Abp.Validation.IValidationEnabled"
            },
            {
              "type": "Volo.Abp.Auditing.IAuditingEnabled"
            },
            {
              "type": "Volo.Abp.GlobalFeatures.IGlobalFeatureCheckingEnabled"
            },
            {
              "type": "RMG.ComplianceSystem.Controls.IControlAppService"
            }
          ],
          "actions": {
            "GetListWithoutPagingAsyncByInput": {
              "uniqueName": "GetListWithoutPagingAsyncByInput",
              "name": "GetListWithoutPagingAsync",
              "httpMethod": "GET",
              "url": "api/app/control/without-paging",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Controls.Dtos.ControlPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Controls.Dtos.ControlPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.Controls.Dtos.ControlPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "MainControlId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "IsMainControl",
                  "jsonName": null,
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Status",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Shared.SharedStatus?",
                  "typeSimple": "RMG.ComplianceSystem.Shared.SharedStatus?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "DomainId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "FrameWorkId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<RMG.ComplianceSystem.Controls.Dtos.ControlDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<RMG.ComplianceSystem.Controls.Dtos.ControlDto>"
              },
              "allowAnonymous": false
            },
            "GetListControlsByFramworkAsyncByInput": {
              "uniqueName": "GetListControlsByFramworkAsyncByInput",
              "name": "GetListControlsByFramworkAsync",
              "httpMethod": "GET",
              "url": "api/app/control/controls-by-framwork",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Controls.Dtos.ControlPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Controls.Dtos.ControlPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.Controls.Dtos.ControlPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "MainControlId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "IsMainControl",
                  "jsonName": null,
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Status",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Shared.SharedStatus?",
                  "typeSimple": "RMG.ComplianceSystem.Shared.SharedStatus?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "DomainId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "FrameWorkId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<RMG.ComplianceSystem.Controls.Dtos.ControlDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<RMG.ComplianceSystem.Controls.Dtos.ControlDto>"
              },
              "allowAnonymous": null
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/control",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Controls.Dtos.CreateUpdateControlDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Controls.Dtos.CreateUpdateControlDto",
                  "typeSimple": "RMG.ComplianceSystem.Controls.Dtos.CreateUpdateControlDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Controls.Dtos.CreateUpdateControlDto",
                  "typeSimple": "RMG.ComplianceSystem.Controls.Dtos.CreateUpdateControlDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Controls.Dtos.ControlDto",
                "typeSimple": "RMG.ComplianceSystem.Controls.Dtos.ControlDto"
              },
              "allowAnonymous": null
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/control/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Controls.Dtos.CreateUpdateControlDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Controls.Dtos.CreateUpdateControlDto",
                  "typeSimple": "RMG.ComplianceSystem.Controls.Dtos.CreateUpdateControlDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Controls.Dtos.CreateUpdateControlDto",
                  "typeSimple": "RMG.ComplianceSystem.Controls.Dtos.CreateUpdateControlDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Controls.Dtos.ControlDto",
                "typeSimple": "RMG.ComplianceSystem.Controls.Dtos.ControlDto"
              },
              "allowAnonymous": null
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/control/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/control/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Controls.Dtos.ControlDto",
                "typeSimple": "RMG.ComplianceSystem.Controls.Dtos.ControlDto"
              },
              "allowAnonymous": null
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/control",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Controls.Dtos.ControlPagedAndSortedResultRequestDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Controls.Dtos.ControlPagedAndSortedResultRequestDto",
                  "typeSimple": "RMG.ComplianceSystem.Controls.Dtos.ControlPagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "MainControlId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "IsMainControl",
                  "jsonName": null,
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Search",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Status",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Shared.SharedStatus?",
                  "typeSimple": "RMG.ComplianceSystem.Shared.SharedStatus?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "DomainId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "FrameWorkId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Controls.Dtos.ControlDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Controls.Dtos.ControlDto>"
              },
              "allowAnonymous": null
            }
          }
        },
        "RMG.ComplianceSystem.Breadcrumbs.BreadCrumbAppService": {
          "controllerName": "BreadCrumb",
          "type": "RMG.ComplianceSystem.Breadcrumbs.BreadCrumbAppService",
          "interfaces": [
            {
              "type": "Volo.Abp.Validation.IValidationEnabled"
            },
            {
              "type": "Volo.Abp.Auditing.IAuditingEnabled"
            },
            {
              "type": "Volo.Abp.GlobalFeatures.IGlobalFeatureCheckingEnabled"
            },
            {
              "type": "RMG.ComplianceSystem.Breadcrumbs.IBreadCrumbAppService"
            }
          ],
          "actions": {
            "GetBreadCrumbSettingsByInput": {
              "uniqueName": "GetBreadCrumbSettingsByInput",
              "name": "GetBreadCrumbSettings",
              "httpMethod": "GET",
              "url": "api/app/bread-crumb/bread-crumb-settings",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Breadcrumbs.Dtos.GetBreadCrumbSettingsDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Breadcrumbs.Dtos.GetBreadCrumbSettingsDto",
                  "typeSimple": "RMG.ComplianceSystem.Breadcrumbs.Dtos.GetBreadCrumbSettingsDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Type",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Breadcrumbs.BreadCrumbSettingsType",
                  "typeSimple": "RMG.ComplianceSystem.Breadcrumbs.BreadCrumbSettingsType",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Breadcrumbs.Dtos.BreadCrumbSettingsDto",
                "typeSimple": "RMG.ComplianceSystem.Breadcrumbs.Dtos.BreadCrumbSettingsDto"
              },
              "allowAnonymous": false
            }
          }
        },
        "RMG.ComplianceSystem.Books.BookAppService": {
          "controllerName": "Book",
          "type": "RMG.ComplianceSystem.Books.BookAppService",
          "interfaces": [
            {
              "type": "Volo.Abp.Validation.IValidationEnabled"
            },
            {
              "type": "Volo.Abp.Auditing.IAuditingEnabled"
            },
            {
              "type": "Volo.Abp.GlobalFeatures.IGlobalFeatureCheckingEnabled"
            },
            {
              "type": "RMG.ComplianceSystem.Books.IBookAppService"
            }
          ],
          "actions": {
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/book/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Books.BookDto",
                "typeSimple": "RMG.ComplianceSystem.Books.BookDto"
              },
              "allowAnonymous": false
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/book",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto, Volo.Abp.Ddd.Application.Contracts",
                  "type": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                  "typeSimple": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Books.BookDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Books.BookDto>"
              },
              "allowAnonymous": false
            },
            "GetAuthorLookupAsync": {
              "uniqueName": "GetAuthorLookupAsync",
              "name": "GetAuthorLookupAsync",
              "httpMethod": "GET",
              "url": "api/app/book/author-lookup",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<RMG.ComplianceSystem.Books.AuthorLookupDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<RMG.ComplianceSystem.Books.AuthorLookupDto>"
              },
              "allowAnonymous": false
            },
            "CreateAuthorWithBooksAsyncByInput": {
              "uniqueName": "CreateAuthorWithBooksAsyncByInput",
              "name": "CreateAuthorWithBooksAsync",
              "httpMethod": "POST",
              "url": "api/app/book/author-with-books",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Books.CreateAuthorWithBookDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Books.CreateAuthorWithBookDto",
                  "typeSimple": "RMG.ComplianceSystem.Books.CreateAuthorWithBookDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Books.CreateAuthorWithBookDto",
                  "typeSimple": "RMG.ComplianceSystem.Books.CreateAuthorWithBookDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Books.AuthorWithDetailsDto",
                "typeSimple": "RMG.ComplianceSystem.Books.AuthorWithDetailsDto"
              },
              "allowAnonymous": false
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/book",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Books.CreateUpdateBookDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Books.CreateUpdateBookDto",
                  "typeSimple": "RMG.ComplianceSystem.Books.CreateUpdateBookDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Books.CreateUpdateBookDto",
                  "typeSimple": "RMG.ComplianceSystem.Books.CreateUpdateBookDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Books.BookDto",
                "typeSimple": "RMG.ComplianceSystem.Books.BookDto"
              },
              "allowAnonymous": false
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/book/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Books.CreateUpdateBookDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Books.CreateUpdateBookDto",
                  "typeSimple": "RMG.ComplianceSystem.Books.CreateUpdateBookDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Books.CreateUpdateBookDto",
                  "typeSimple": "RMG.ComplianceSystem.Books.CreateUpdateBookDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Books.BookDto",
                "typeSimple": "RMG.ComplianceSystem.Books.BookDto"
              },
              "allowAnonymous": false
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/book/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false
            }
          }
        },
        "RMG.ComplianceSystem.Authors.AuthorAppService": {
          "controllerName": "Author",
          "type": "RMG.ComplianceSystem.Authors.AuthorAppService",
          "interfaces": [
            {
              "type": "Volo.Abp.Validation.IValidationEnabled"
            },
            {
              "type": "Volo.Abp.Auditing.IAuditingEnabled"
            },
            {
              "type": "Volo.Abp.GlobalFeatures.IGlobalFeatureCheckingEnabled"
            },
            {
              "type": "RMG.ComplianceSystem.Authors.IAuthorAppService"
            }
          ],
          "actions": {
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/author/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Authors.AuthorDto",
                "typeSimple": "RMG.ComplianceSystem.Authors.AuthorDto"
              },
              "allowAnonymous": false
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/author",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Authors.GetAuthorListDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Authors.GetAuthorListDto",
                  "typeSimple": "RMG.ComplianceSystem.Authors.GetAuthorListDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Authors.AuthorDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<RMG.ComplianceSystem.Authors.AuthorDto>"
              },
              "allowAnonymous": false
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/author",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Authors.CreateAuthorDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Authors.CreateAuthorDto",
                  "typeSimple": "RMG.ComplianceSystem.Authors.CreateAuthorDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Authors.CreateAuthorDto",
                  "typeSimple": "RMG.ComplianceSystem.Authors.CreateAuthorDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Authors.AuthorDto",
                "typeSimple": "RMG.ComplianceSystem.Authors.AuthorDto"
              },
              "allowAnonymous": false
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/author/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Authors.UpdateAuthorDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Authors.UpdateAuthorDto",
                  "typeSimple": "RMG.ComplianceSystem.Authors.UpdateAuthorDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Authors.UpdateAuthorDto",
                  "typeSimple": "RMG.ComplianceSystem.Authors.UpdateAuthorDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/author/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false
            }
          }
        },
        "RMG.ComplianceSystem.Attachments.AttachmentAppService": {
          "controllerName": "Attachment",
          "type": "RMG.ComplianceSystem.Attachments.AttachmentAppService",
          "interfaces": [
            {
              "type": "Volo.Abp.Validation.IValidationEnabled"
            },
            {
              "type": "Volo.Abp.Auditing.IAuditingEnabled"
            },
            {
              "type": "Volo.Abp.GlobalFeatures.IGlobalFeatureCheckingEnabled"
            },
            {
              "type": "RMG.ComplianceSystem.Attachments.IAttachmentAppService"
            }
          ],
          "actions": {
            "UploadFilesByAttachmentIdAndIsMultipleAndMaxFileSizeAndFileExtentionsAndFiles": {
              "uniqueName": "UploadFilesByAttachmentIdAndIsMultipleAndMaxFileSizeAndFileExtentionsAndFiles",
              "name": "UploadFiles",
              "httpMethod": "POST",
              "url": "api/app/attachment/upload-files",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "attachmentId",
                  "typeAsString": "System.Nullable`1[[System.Guid, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib",
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "isMultiple",
                  "typeAsString": "System.Nullable`1[[System.Boolean, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib",
                  "type": "System.Boolean?",
                  "typeSimple": "boolean?",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "maxFileSize",
                  "typeAsString": "System.Nullable`1[[System.Int32, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib",
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "fileExtentions",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "files",
                  "typeAsString": "System.Collections.Generic.List`1[[Microsoft.AspNetCore.Http.IFormFile, Microsoft.AspNetCore.Http.Features, Version=5.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]], System.Private.CoreLib",
                  "type": "System.Collections.Generic.List<Microsoft.AspNetCore.Http.IFormFile>",
                  "typeSimple": "[Microsoft.AspNetCore.Http.IFormFile]",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "attachmentId",
                  "name": "attachmentId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "isMultiple",
                  "name": "isMultiple",
                  "jsonName": null,
                  "type": "System.Boolean?",
                  "typeSimple": "boolean?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "maxFileSize",
                  "name": "maxFileSize",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "fileExtentions",
                  "name": "fileExtentions",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "files",
                  "name": "files",
                  "jsonName": null,
                  "type": "System.Collections.Generic.List<Microsoft.AspNetCore.Http.IFormFile>",
                  "typeSimple": "[Microsoft.AspNetCore.Http.IFormFile]",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "FormFile",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Guid",
                "typeSimple": "string"
              },
              "allowAnonymous": false
            },
            "DeleteFileByAttachmentIdAndFileId": {
              "uniqueName": "DeleteFileByAttachmentIdAndFileId",
              "name": "DeleteFile",
              "httpMethod": "DELETE",
              "url": "api/app/attachment/file",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "attachmentId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "fileId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "attachmentId",
                  "name": "attachmentId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "fileId",
                  "name": "fileId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false
            },
            "GetAttachmentWithFileByAttachmentId": {
              "uniqueName": "GetAttachmentWithFileByAttachmentId",
              "name": "GetAttachmentWithFile",
              "httpMethod": "GET",
              "url": "api/app/attachment/attachment-with-file/{attachmentId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "attachmentId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "attachmentId",
                  "name": "attachmentId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Attachments.Dtos.AttachmentDto",
                "typeSimple": "RMG.ComplianceSystem.Attachments.Dtos.AttachmentDto"
              },
              "allowAnonymous": false
            },
            "GetDownloadAttachmentFilesByAttachmentId": {
              "uniqueName": "GetDownloadAttachmentFilesByAttachmentId",
              "name": "GetDownloadAttachmentFiles",
              "httpMethod": "GET",
              "url": "api/app/attachment/download-attachment-files/{attachmentId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "attachmentId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "attachmentId",
                  "name": "attachmentId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Content.IRemoteStreamContent",
                "typeSimple": "Volo.Abp.Content.IRemoteStreamContent"
              },
              "allowAnonymous": false
            },
            "GetDownloadFileByFileId": {
              "uniqueName": "GetDownloadFileByFileId",
              "name": "GetDownloadFile",
              "httpMethod": "GET",
              "url": "api/app/attachment/download-file/{fileId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "fileId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "fileId",
                  "name": "fileId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Content.IRemoteStreamContent",
                "typeSimple": "Volo.Abp.Content.IRemoteStreamContent"
              },
              "allowAnonymous": false
            }
          }
        },
        "RMG.ComplianceSystem.Assessments.AssessmentAppService": {
          "controllerName": "Assessment",
          "type": "RMG.ComplianceSystem.Assessments.AssessmentAppService",
          "interfaces": [
            {
              "type": "Volo.Abp.Validation.IValidationEnabled"
            },
            {
              "type": "Volo.Abp.Auditing.IAuditingEnabled"
            },
            {
              "type": "Volo.Abp.GlobalFeatures.IGlobalFeatureCheckingEnabled"
            },
            {
              "type": "RMG.ComplianceSystem.Assessments.IAssessmentAppService"
            }
          ],
          "actions": {
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/assessment",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Assessments.Dtos.CreateUpdateAssessmentDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Assessments.Dtos.CreateUpdateAssessmentDto",
                  "typeSimple": "RMG.ComplianceSystem.Assessments.Dtos.CreateUpdateAssessmentDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Assessments.Dtos.CreateUpdateAssessmentDto",
                  "typeSimple": "RMG.ComplianceSystem.Assessments.Dtos.CreateUpdateAssessmentDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Assessments.Dtos.AssessmentDto",
                "typeSimple": "RMG.ComplianceSystem.Assessments.Dtos.AssessmentDto"
              },
              "allowAnonymous": null
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/assessment/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "RMG.ComplianceSystem.Assessments.Dtos.CreateUpdateAssessmentDto, RMG.ComplianceSystem.Application.Contracts",
                  "type": "RMG.ComplianceSystem.Assessments.Dtos.CreateUpdateAssessmentDto",
                  "typeSimple": "RMG.ComplianceSystem.Assessments.Dtos.CreateUpdateAssessmentDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "RMG.ComplianceSystem.Assessments.Dtos.CreateUpdateAssessmentDto",
                  "typeSimple": "RMG.ComplianceSystem.Assessments.Dtos.CreateUpdateAssessmentDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Assessments.Dtos.AssessmentDto",
                "typeSimple": "RMG.ComplianceSystem.Assessments.Dtos.AssessmentDto"
              },
              "allowAnonymous": null
            },
            "GetByControlIdAsyncById": {
              "uniqueName": "GetByControlIdAsyncById",
              "name": "GetByControlIdAsync",
              "httpMethod": "GET",
              "url": "api/app/assessment/{id}/by-control-id",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "RMG.ComplianceSystem.Assessments.Dtos.AssessmentDto",
                "typeSimple": "RMG.ComplianceSystem.Assessments.Dtos.AssessmentDto"
              },
              "allowAnonymous": false
            }
          }
        }
      }
    },
    "featureManagement": {
      "rootPath": "featureManagement",
      "remoteServiceName": "AbpFeatureManagement",
      "controllers": {
        "Volo.Abp.FeatureManagement.FeaturesController": {
          "controllerName": "Features",
          "type": "Volo.Abp.FeatureManagement.FeaturesController",
          "interfaces": [
            {
              "type": "Volo.Abp.FeatureManagement.IFeatureAppService"
            }
          ],
          "actions": {
            "GetAsyncByProviderNameAndProviderKey": {
              "uniqueName": "GetAsyncByProviderNameAndProviderKey",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/feature-management/features",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "providerName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "providerKey",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "providerName",
                  "name": "providerName",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "providerKey",
                  "name": "providerKey",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.FeatureManagement.GetFeatureListResultDto",
                "typeSimple": "Volo.Abp.FeatureManagement.GetFeatureListResultDto"
              },
              "allowAnonymous": null
            },
            "UpdateAsyncByProviderNameAndProviderKeyAndInput": {
              "uniqueName": "UpdateAsyncByProviderNameAndProviderKeyAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/feature-management/features",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "providerName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "providerKey",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.FeatureManagement.UpdateFeaturesDto, Volo.Abp.FeatureManagement.Application.Contracts",
                  "type": "Volo.Abp.FeatureManagement.UpdateFeaturesDto",
                  "typeSimple": "Volo.Abp.FeatureManagement.UpdateFeaturesDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "providerName",
                  "name": "providerName",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "providerKey",
                  "name": "providerKey",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.FeatureManagement.UpdateFeaturesDto",
                  "typeSimple": "Volo.Abp.FeatureManagement.UpdateFeaturesDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            }
          }
        }
      }
    },
    "abp": {
      "rootPath": "abp",
      "remoteServiceName": "abp",
      "controllers": {
        "Pages.Abp.MultiTenancy.AbpTenantController": {
          "controllerName": "AbpTenant",
          "type": "Pages.Abp.MultiTenancy.AbpTenantController",
          "interfaces": [
            {
              "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.IAbpTenantAppService"
            }
          ],
          "actions": {
            "FindTenantByNameAsyncByName": {
              "uniqueName": "FindTenantByNameAsyncByName",
              "name": "FindTenantByNameAsync",
              "httpMethod": "GET",
              "url": "api/abp/multi-tenancy/tenants/by-name/{name}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "name",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "name",
                  "name": "name",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto",
                "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto"
              },
              "allowAnonymous": null
            },
            "FindTenantByIdAsyncById": {
              "uniqueName": "FindTenantByIdAsyncById",
              "name": "FindTenantByIdAsync",
              "httpMethod": "GET",
              "url": "api/abp/multi-tenancy/tenants/by-id/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto",
                "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto"
              },
              "allowAnonymous": null
            }
          }
        },
        "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationController": {
          "controllerName": "AbpApplicationConfiguration",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationController",
          "interfaces": [
            {
              "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IAbpApplicationConfigurationAppService"
            }
          ],
          "actions": {
            "GetAsync": {
              "uniqueName": "GetAsync",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/abp/application-configuration",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto",
                "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto"
              },
              "allowAnonymous": null
            }
          }
        },
        "Volo.Abp.AspNetCore.Mvc.ApiExploring.AbpApiDefinitionController": {
          "controllerName": "AbpApiDefinition",
          "type": "Volo.Abp.AspNetCore.Mvc.ApiExploring.AbpApiDefinitionController",
          "interfaces": [],
          "actions": {
            "GetByModel": {
              "uniqueName": "GetByModel",
              "name": "Get",
              "httpMethod": "GET",
              "url": "api/abp/api-definition",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "model",
                  "typeAsString": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModelRequestDto, Volo.Abp.Http",
                  "type": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModelRequestDto",
                  "typeSimple": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModelRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "model",
                  "name": "IncludeTypes",
                  "jsonName": null,
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "model"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModel",
                "typeSimple": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModel"
              },
              "allowAnonymous": null
            }
          }
        }
      }
    },
    "multi-tenancy": {
      "rootPath": "multi-tenancy",
      "remoteServiceName": "AbpTenantManagement",
      "controllers": {
        "Volo.Abp.TenantManagement.TenantController": {
          "controllerName": "Tenant",
          "type": "Volo.Abp.TenantManagement.TenantController",
          "interfaces": [
            {
              "type": "Volo.Abp.TenantManagement.ITenantAppService"
            }
          ],
          "actions": {
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/multi-tenancy/tenants/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.TenantManagement.TenantDto",
                "typeSimple": "Volo.Abp.TenantManagement.TenantDto"
              },
              "allowAnonymous": null
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/multi-tenancy/tenants",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.TenantManagement.GetTenantsInput, Volo.Abp.TenantManagement.Application.Contracts",
                  "type": "Volo.Abp.TenantManagement.GetTenantsInput",
                  "typeSimple": "Volo.Abp.TenantManagement.GetTenantsInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.TenantManagement.TenantDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.TenantManagement.TenantDto>"
              },
              "allowAnonymous": null
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/multi-tenancy/tenants",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.TenantManagement.TenantCreateDto, Volo.Abp.TenantManagement.Application.Contracts",
                  "type": "Volo.Abp.TenantManagement.TenantCreateDto",
                  "typeSimple": "Volo.Abp.TenantManagement.TenantCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.TenantManagement.TenantCreateDto",
                  "typeSimple": "Volo.Abp.TenantManagement.TenantCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.TenantManagement.TenantDto",
                "typeSimple": "Volo.Abp.TenantManagement.TenantDto"
              },
              "allowAnonymous": null
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/multi-tenancy/tenants/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.TenantManagement.TenantUpdateDto, Volo.Abp.TenantManagement.Application.Contracts",
                  "type": "Volo.Abp.TenantManagement.TenantUpdateDto",
                  "typeSimple": "Volo.Abp.TenantManagement.TenantUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.TenantManagement.TenantUpdateDto",
                  "typeSimple": "Volo.Abp.TenantManagement.TenantUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.TenantManagement.TenantDto",
                "typeSimple": "Volo.Abp.TenantManagement.TenantDto"
              },
              "allowAnonymous": null
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/multi-tenancy/tenants/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "GetDefaultConnectionStringAsyncById": {
              "uniqueName": "GetDefaultConnectionStringAsyncById",
              "name": "GetDefaultConnectionStringAsync",
              "httpMethod": "GET",
              "url": "api/multi-tenancy/tenants/{id}/default-connection-string",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.String",
                "typeSimple": "string"
              },
              "allowAnonymous": null
            },
            "UpdateDefaultConnectionStringAsyncByIdAndDefaultConnectionString": {
              "uniqueName": "UpdateDefaultConnectionStringAsyncByIdAndDefaultConnectionString",
              "name": "UpdateDefaultConnectionStringAsync",
              "httpMethod": "PUT",
              "url": "api/multi-tenancy/tenants/{id}/default-connection-string",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "defaultConnectionString",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "defaultConnectionString",
                  "name": "defaultConnectionString",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            },
            "DeleteDefaultConnectionStringAsyncById": {
              "uniqueName": "DeleteDefaultConnectionStringAsyncById",
              "name": "DeleteDefaultConnectionStringAsync",
              "httpMethod": "DELETE",
              "url": "api/multi-tenancy/tenants/{id}/default-connection-string",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null
            }
          }
        }
      }
    }
  },
  "types": {
    "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserNameOrEmailAddress",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "Password",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "RememberMe",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Result",
          "jsonName": null,
          "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.LoginResultType",
          "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.LoginResultType",
          "isRequired": false
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.LoginResultType": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Success",
        "InvalidUserNameOrPassword",
        "NotAllowed",
        "LockedOut",
        "RequiresTwoFactor"
      ],
      "enumValues": [
        1,
        2,
        3,
        4,
        5
      ],
      "genericArguments": null,
      "properties": null
    },
    "Volo.Abp.Account.RegisterDto": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "EmailAddress",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "Password",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "AppName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        }
      ]
    },
    "Volo.Abp.ObjectExtending.ExtensibleObject": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ExtraProperties",
          "jsonName": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Identity.IdentityUserDto": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleFullAuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TenantId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "UserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Surname",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "EmailConfirmed",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "PhoneNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "PhoneNumberConfirmed",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "LockoutEnabled",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "LockoutEnd",
          "jsonName": null,
          "type": "System.DateTimeOffset?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "ConcurrencyStamp",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ExtensibleFullAuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleAuditedEntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey"
      ],
      "properties": [
        {
          "name": "IsDeleted",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "DeleterId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "DeletionTime",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ExtensibleAuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleCreationAuditedEntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey"
      ],
      "properties": [
        {
          "name": "LastModificationTime",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "LastModifierId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ExtensibleCreationAuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleEntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey"
      ],
      "properties": [
        {
          "name": "CreationTime",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "CreatorId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ExtensibleEntityDto<T0>": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TKey"
      ],
      "properties": [
        {
          "name": "Id",
          "jsonName": null,
          "type": "TKey",
          "typeSimple": "TKey",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Account.SendPasswordResetCodeDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "AppName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "ReturnUrl",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ReturnUrlHash",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Account.ResetPasswordDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ResetToken",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "Password",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Success",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "TenantId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ListResultDto<T0>": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "T"
      ],
      "properties": [
        {
          "name": "Items",
          "jsonName": null,
          "type": "[T]",
          "typeSimple": "[T]",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Identity.IdentityRoleDto": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsDefault",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsStatic",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsPublic",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "ConcurrencyStamp",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Identity.GetIdentityRolesInput": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Filter",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Sorting",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.PagedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.LimitedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SkipCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.LimitedResultRequestDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "DefaultMaxResultCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "MaxMaxResultCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "MaxResultCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.PagedResultDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.ListResultDto<T>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "T"
      ],
      "properties": [
        {
          "name": "TotalCount",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Identity.IdentityRoleCreateDto": {
      "baseType": "Volo.Abp.Identity.IdentityRoleCreateOrUpdateDtoBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "Volo.Abp.Identity.IdentityRoleCreateOrUpdateDtoBase": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "IsDefault",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsPublic",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Identity.IdentityRoleUpdateDto": {
      "baseType": "Volo.Abp.Identity.IdentityRoleCreateOrUpdateDtoBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ConcurrencyStamp",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Identity.GetIdentityUsersInput": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Filter",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Identity.IdentityUserCreateDto": {
      "baseType": "Volo.Abp.Identity.IdentityUserCreateOrUpdateDtoBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Password",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        }
      ]
    },
    "Volo.Abp.Identity.IdentityUserCreateOrUpdateDtoBase": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Surname",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "PhoneNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "LockoutEnabled",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "RoleNames",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Identity.IdentityUserUpdateDto": {
      "baseType": "Volo.Abp.Identity.IdentityUserCreateOrUpdateDtoBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Password",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ConcurrencyStamp",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Identity.IdentityUserUpdateRolesDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "RoleNames",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": true
        }
      ]
    },
    "Volo.Abp.Users.UserData": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TenantId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "UserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Surname",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "EmailConfirmed",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "PhoneNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "PhoneNumberConfirmed",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Identity.UserLookupSearchInputDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Filter",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Identity.UserLookupCountInputDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Filter",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Identity.ProfileDto": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Surname",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "PhoneNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsExternal",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "HasPassword",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Identity.UpdateProfileDto": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Surname",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "PhoneNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Identity.ChangePasswordInput": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CurrentPassword",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "NewPassword",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        }
      ]
    },
    "Volo.Abp.PermissionManagement.GetPermissionListResultDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "EntityDisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Groups",
          "jsonName": null,
          "type": "[Volo.Abp.PermissionManagement.PermissionGroupDto]",
          "typeSimple": "[Volo.Abp.PermissionManagement.PermissionGroupDto]",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.PermissionManagement.PermissionGroupDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Permissions",
          "jsonName": null,
          "type": "[Volo.Abp.PermissionManagement.PermissionGrantInfoDto]",
          "typeSimple": "[Volo.Abp.PermissionManagement.PermissionGrantInfoDto]",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.PermissionManagement.PermissionGrantInfoDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ParentName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsGranted",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "AllowedProviders",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false
        },
        {
          "name": "GrantedProviders",
          "jsonName": null,
          "type": "[Volo.Abp.PermissionManagement.ProviderInfoDto]",
          "typeSimple": "[Volo.Abp.PermissionManagement.ProviderInfoDto]",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.PermissionManagement.ProviderInfoDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ProviderName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ProviderKey",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.PermissionManagement.UpdatePermissionsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Permissions",
          "jsonName": null,
          "type": "[Volo.Abp.PermissionManagement.UpdatePermissionDto]",
          "typeSimple": "[Volo.Abp.PermissionManagement.UpdatePermissionDto]",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.PermissionManagement.UpdatePermissionDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsGranted",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.SettingManagement.EmailSettingsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SmtpHost",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "SmtpPort",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "SmtpUserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "SmtpPassword",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "SmtpDomain",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "SmtpEnableSsl",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "SmtpUseDefaultCredentials",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "DefaultFromAddress",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DefaultFromDisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.SettingManagement.UpdateEmailSettingsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SmtpHost",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "SmtpPort",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "SmtpUserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "SmtpPassword",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "SmtpDomain",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "SmtpEnableSsl",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "SmtpUseDefaultCredentials",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "DefaultFromAddress",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "DefaultFromDisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        }
      ]
    },
    "Volo.Abp.TenantManagement.TenantDto": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.TenantManagement.GetTenantsInput": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Filter",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.TenantManagement.TenantCreateDto": {
      "baseType": "Volo.Abp.TenantManagement.TenantCreateOrUpdateDtoBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "AdminEmailAddress",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "AdminPassword",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        }
      ]
    },
    "Volo.Abp.TenantManagement.TenantCreateOrUpdateDtoBase": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        }
      ]
    },
    "Volo.Abp.TenantManagement.TenantUpdateDto": {
      "baseType": "Volo.Abp.TenantManagement.TenantCreateOrUpdateDtoBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "Volo.Abp.FeatureManagement.GetFeatureListResultDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Groups",
          "jsonName": null,
          "type": "[Volo.Abp.FeatureManagement.FeatureGroupDto]",
          "typeSimple": "[Volo.Abp.FeatureManagement.FeatureGroupDto]",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.FeatureManagement.FeatureGroupDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Features",
          "jsonName": null,
          "type": "[Volo.Abp.FeatureManagement.FeatureDto]",
          "typeSimple": "[Volo.Abp.FeatureManagement.FeatureDto]",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.FeatureManagement.FeatureDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Value",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Provider",
          "jsonName": null,
          "type": "Volo.Abp.FeatureManagement.FeatureProviderDto",
          "typeSimple": "Volo.Abp.FeatureManagement.FeatureProviderDto",
          "isRequired": false
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ValueType",
          "jsonName": null,
          "type": "Volo.Abp.Validation.StringValues.IStringValueType",
          "typeSimple": "Volo.Abp.Validation.StringValues.IStringValueType",
          "isRequired": false
        },
        {
          "name": "Depth",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "ParentName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.FeatureManagement.FeatureProviderDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Key",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Validation.StringValues.IStringValueType": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Item",
          "jsonName": null,
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false
        },
        {
          "name": "Properties",
          "jsonName": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false
        },
        {
          "name": "Validator",
          "jsonName": null,
          "type": "Volo.Abp.Validation.StringValues.IValueValidator",
          "typeSimple": "Volo.Abp.Validation.StringValues.IValueValidator",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Validation.StringValues.IValueValidator": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Item",
          "jsonName": null,
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false
        },
        {
          "name": "Properties",
          "jsonName": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.FeatureManagement.UpdateFeaturesDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Features",
          "jsonName": null,
          "type": "[Volo.Abp.FeatureManagement.UpdateFeatureDto]",
          "typeSimple": "[Volo.Abp.FeatureManagement.UpdateFeatureDto]",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.FeatureManagement.UpdateFeatureDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Value",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Localization",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationConfigurationDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationConfigurationDto",
          "isRequired": false
        },
        {
          "name": "Auth",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationAuthConfigurationDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationAuthConfigurationDto",
          "isRequired": false
        },
        {
          "name": "Setting",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationSettingConfigurationDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationSettingConfigurationDto",
          "isRequired": false
        },
        {
          "name": "CurrentUser",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentUserDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentUserDto",
          "isRequired": false
        },
        {
          "name": "Features",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationFeatureConfigurationDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationFeatureConfigurationDto",
          "isRequired": false
        },
        {
          "name": "MultiTenancy",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.MultiTenancyInfoDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.MultiTenancyInfoDto",
          "isRequired": false
        },
        {
          "name": "CurrentTenant",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.CurrentTenantDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.CurrentTenantDto",
          "isRequired": false
        },
        {
          "name": "Timing",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimingDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimingDto",
          "isRequired": false
        },
        {
          "name": "Clock",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ClockDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ClockDto",
          "isRequired": false
        },
        {
          "name": "ObjectExtensions",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ObjectExtensionsDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ObjectExtensionsDto",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Values",
          "jsonName": null,
          "type": "{System.String:System.Collections.Generic.Dictionary<System.String,System.String>}",
          "typeSimple": "{string:System.Collections.Generic.Dictionary<string,string>}",
          "isRequired": false
        },
        {
          "name": "Languages",
          "jsonName": null,
          "type": "[Volo.Abp.Localization.LanguageInfo]",
          "typeSimple": "[Volo.Abp.Localization.LanguageInfo]",
          "isRequired": false
        },
        {
          "name": "CurrentCulture",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto",
          "isRequired": false
        },
        {
          "name": "DefaultResourceName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "LanguagesMap",
          "jsonName": null,
          "type": "{System.String:[Volo.Abp.NameValue]}",
          "typeSimple": "{string:[Volo.Abp.NameValue]}",
          "isRequired": false
        },
        {
          "name": "LanguageFilesMap",
          "jsonName": null,
          "type": "{System.String:[Volo.Abp.NameValue]}",
          "typeSimple": "{string:[Volo.Abp.NameValue]}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Localization.LanguageInfo": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CultureName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "UiCultureName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "FlagIcon",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "DisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "EnglishName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ThreeLetterIsoLanguageName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TwoLetterIsoLanguageName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsRightToLeft",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "CultureName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "NativeName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DateTimeFormat",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.DateTimeFormatDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.DateTimeFormatDto",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.DateTimeFormatDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CalendarAlgorithmType",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DateTimeFormatLong",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ShortDatePattern",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "FullDateTimePattern",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DateSeparator",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ShortTimePattern",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "LongTimePattern",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.NameValue": {
      "baseType": "Volo.Abp.NameValue<System.String>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "Volo.Abp.NameValue<T0>": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "T"
      ],
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Value",
          "jsonName": null,
          "type": "T",
          "typeSimple": "T",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationAuthConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Policies",
          "jsonName": null,
          "type": "{System.String:System.Boolean}",
          "typeSimple": "{string:boolean}",
          "isRequired": false
        },
        {
          "name": "GrantedPolicies",
          "jsonName": null,
          "type": "{System.String:System.Boolean}",
          "typeSimple": "{string:boolean}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationSettingConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Values",
          "jsonName": null,
          "type": "{System.String:System.String}",
          "typeSimple": "{string:string}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentUserDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsAuthenticated",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "Id",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "TenantId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "ImpersonatorUserId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "ImpersonatorTenantId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "UserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "SurName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "EmailVerified",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "PhoneNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "PhoneNumberVerified",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "Roles",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationFeatureConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Values",
          "jsonName": null,
          "type": "{System.String:System.String}",
          "typeSimple": "{string:string}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.MultiTenancy.MultiTenancyInfoDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsEnabled",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.MultiTenancy.CurrentTenantDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsAvailable",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimingDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TimeZone",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimeZone",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimeZone",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimeZone": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Iana",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IanaTimeZone",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IanaTimeZone",
          "isRequired": false
        },
        {
          "name": "Windows",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.WindowsTimeZone",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.WindowsTimeZone",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IanaTimeZone": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TimeZoneName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.WindowsTimeZone": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TimeZoneId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ClockDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Kind",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ObjectExtensionsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Modules",
          "jsonName": null,
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ModuleExtensionDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ModuleExtensionDto}",
          "isRequired": false
        },
        {
          "name": "Enums",
          "jsonName": null,
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumDto}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ModuleExtensionDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Entities",
          "jsonName": null,
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.EntityExtensionDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.EntityExtensionDto}",
          "isRequired": false
        },
        {
          "name": "Configuration",
          "jsonName": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.EntityExtensionDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Properties",
          "jsonName": null,
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyDto}",
          "isRequired": false
        },
        {
          "name": "Configuration",
          "jsonName": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TypeSimple",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DisplayName",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.LocalizableStringDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.LocalizableStringDto",
          "isRequired": false
        },
        {
          "name": "Api",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiDto",
          "isRequired": false
        },
        {
          "name": "Ui",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiDto",
          "isRequired": false
        },
        {
          "name": "Attributes",
          "jsonName": null,
          "type": "[Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyAttributeDto]",
          "typeSimple": "[Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyAttributeDto]",
          "isRequired": false
        },
        {
          "name": "Configuration",
          "jsonName": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false
        },
        {
          "name": "DefaultValue",
          "jsonName": null,
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.LocalizableStringDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Resource",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "OnGet",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiGetDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiGetDto",
          "isRequired": false
        },
        {
          "name": "OnCreate",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiCreateDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiCreateDto",
          "isRequired": false
        },
        {
          "name": "OnUpdate",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiUpdateDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiUpdateDto",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiGetDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsAvailable",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiCreateDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsAvailable",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiUpdateDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsAvailable",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "OnTable",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiTableDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiTableDto",
          "isRequired": false
        },
        {
          "name": "OnCreateForm",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto",
          "isRequired": false
        },
        {
          "name": "OnEditForm",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto",
          "isRequired": false
        },
        {
          "name": "Lookup",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiLookupDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiLookupDto",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiTableDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsVisible",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsVisible",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiLookupDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Url",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ResultListPropertyName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DisplayPropertyName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ValuePropertyName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "FilterParamName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyAttributeDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TypeSimple",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Config",
          "jsonName": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Fields",
          "jsonName": null,
          "type": "[Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumFieldDto]",
          "typeSimple": "[Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumFieldDto]",
          "isRequired": false
        },
        {
          "name": "LocalizationResource",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumFieldDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Value",
          "jsonName": null,
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModelRequestDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IncludeTypes",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Modules",
          "jsonName": null,
          "type": "{System.String:Volo.Abp.Http.Modeling.ModuleApiDescriptionModel}",
          "typeSimple": "{string:Volo.Abp.Http.Modeling.ModuleApiDescriptionModel}",
          "isRequired": false
        },
        {
          "name": "Types",
          "jsonName": null,
          "type": "{System.String:Volo.Abp.Http.Modeling.TypeApiDescriptionModel}",
          "typeSimple": "{string:Volo.Abp.Http.Modeling.TypeApiDescriptionModel}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ModuleApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "RootPath",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "RemoteServiceName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Controllers",
          "jsonName": null,
          "type": "{System.String:Volo.Abp.Http.Modeling.ControllerApiDescriptionModel}",
          "typeSimple": "{string:Volo.Abp.Http.Modeling.ControllerApiDescriptionModel}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ControllerApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ControllerName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Interfaces",
          "jsonName": null,
          "type": "[Volo.Abp.Http.Modeling.ControllerInterfaceApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.ControllerInterfaceApiDescriptionModel]",
          "isRequired": false
        },
        {
          "name": "Actions",
          "jsonName": null,
          "type": "{System.String:Volo.Abp.Http.Modeling.ActionApiDescriptionModel}",
          "typeSimple": "{string:Volo.Abp.Http.Modeling.ActionApiDescriptionModel}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ControllerInterfaceApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ActionApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UniqueName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "HttpMethod",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Url",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "SupportedVersions",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false
        },
        {
          "name": "ParametersOnMethod",
          "jsonName": null,
          "type": "[Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel]",
          "isRequired": false
        },
        {
          "name": "Parameters",
          "jsonName": null,
          "type": "[Volo.Abp.Http.Modeling.ParameterApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.ParameterApiDescriptionModel]",
          "isRequired": false
        },
        {
          "name": "ReturnValue",
          "jsonName": null,
          "type": "Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel",
          "typeSimple": "Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel",
          "isRequired": false
        },
        {
          "name": "AllowAnonymous",
          "jsonName": null,
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TypeAsString",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TypeSimple",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsOptional",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "DefaultValue",
          "jsonName": null,
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ParameterApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "NameOnMethod",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "JsonName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TypeSimple",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsOptional",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "DefaultValue",
          "jsonName": null,
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false
        },
        {
          "name": "ConstraintTypes",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false
        },
        {
          "name": "BindingSourceId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DescriptorName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TypeSimple",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.TypeApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "BaseType",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsEnum",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "EnumNames",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false
        },
        {
          "name": "EnumValues",
          "jsonName": null,
          "type": "[System.Object]",
          "typeSimple": "[object]",
          "isRequired": false
        },
        {
          "name": "GenericArguments",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false
        },
        {
          "name": "Properties",
          "jsonName": null,
          "type": "[Volo.Abp.Http.Modeling.PropertyApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.PropertyApiDescriptionModel]",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.PropertyApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "JsonName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TypeSimple",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsRequired",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.StaticData.StaticDataPagedAndSortedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Search",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ParentId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.StaticData.StaticDataDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityWithUserDto<System.Guid,Volo.Abp.Identity.IdentityUserDto>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "NameEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "NameAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ParentId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "TypeName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TenantId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.FullAuditedEntityWithUserDto<T0,T1>": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey",
        "TUserDto"
      ],
      "properties": [
        {
          "name": "Creator",
          "jsonName": null,
          "type": "TUserDto",
          "typeSimple": "TUserDto",
          "isRequired": false
        },
        {
          "name": "LastModifier",
          "jsonName": null,
          "type": "TUserDto",
          "typeSimple": "TUserDto",
          "isRequired": false
        },
        {
          "name": "Deleter",
          "jsonName": null,
          "type": "TUserDto",
          "typeSimple": "TUserDto",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.FullAuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.AuditedEntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey"
      ],
      "properties": [
        {
          "name": "IsDeleted",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "DeleterId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "DeletionTime",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.AuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.CreationAuditedEntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey"
      ],
      "properties": [
        {
          "name": "LastModificationTime",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "LastModifierId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.CreationAuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey"
      ],
      "properties": [
        {
          "name": "CreationTime",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "CreatorId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.EntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TKey"
      ],
      "properties": [
        {
          "name": "Id",
          "jsonName": null,
          "type": "TKey",
          "typeSimple": "TKey",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.EntityDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "RMG.ComplianceSystem.StaticData.getEnumTypeStaticData": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "NameEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "NameAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.StaticData.CreateUpdateStaticDataDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "NameEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "NameAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ParentId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "TenantId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.RiskTreatments.Dtos.RiskTreatmentPagedAndSortedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "RiskOpportunityId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.RiskTreatments.RiskTreatmentDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityWithUserDto<System.Guid,Volo.Abp.Identity.IdentityUserDto>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "RiskOpportunityId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "MitigateActionPlanEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "MitigateActionPlanAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ActionDetailsEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ActionDetailsAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Responsibility",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "ResponsibilityName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "CompletionDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "StatusNameEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "StatusNameAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DueDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "StartDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "AchievementPercentage",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "AttachmentId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "Attachment",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Attachments.Dtos.AttachmentDto",
          "typeSimple": "RMG.ComplianceSystem.Attachments.Dtos.AttachmentDto",
          "isRequired": false
        },
        {
          "name": "RiskAndOpportunity",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Risks.Dtos.RiskAndOpportunityDto",
          "typeSimple": "RMG.ComplianceSystem.Risks.Dtos.RiskAndOpportunityDto",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Attachments.Dtos.AttachmentDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityWithUserDto<System.Guid,Volo.Abp.Identity.IdentityUserDto>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsMultiple",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "MaxFileSize",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "FileExtentions",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AttachmentFiles",
          "jsonName": null,
          "type": "[RMG.ComplianceSystem.Attachments.Dtos.AttachmentFileDto]",
          "typeSimple": "[RMG.ComplianceSystem.Attachments.Dtos.AttachmentFileDto]",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Attachments.Dtos.AttachmentFileDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityWithUserDto<System.Guid,Volo.Abp.Identity.IdentityUserDto>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Size",
          "jsonName": null,
          "type": "System.Double",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "DisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Extention",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AttachmentId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Risks.Dtos.RiskAndOpportunityDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityWithUserDto<System.Guid,Volo.Abp.Identity.IdentityUserDto>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "NameAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "NameEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DetailsAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DetailsEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AffectDetailsAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AffectDetailsEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "status",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "FrameWorkId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "StandardId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "SectorId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "GeneralDepartmentId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "DepartmentId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "CategoryId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "OwnerId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "OwnerName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "WorkFlowStages",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "RiskContext",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "ExistingControlEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ExistingControlAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ControlAssessment",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "NumberMatrix",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "Likelihood",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "Impact",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "Potential",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "IsTreatment",
          "jsonName": null,
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false
        },
        {
          "name": "PotentialNameAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "PotentialNameEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "RiskTreatmentOption",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "RiskTreatmentDto",
          "jsonName": null,
          "type": "[RMG.ComplianceSystem.RiskTreatments.RiskTreatmentDto]",
          "typeSimple": "[RMG.ComplianceSystem.RiskTreatments.RiskTreatmentDto]",
          "isRequired": false
        },
        {
          "name": "ReEvaluation",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "Acceptance",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "AcceptanceApprovedby",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "ReviewControlAssessment",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ReviewRemarks",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DepartmentName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.RiskTreatments.CreateUpdateRiskTreatmentDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "RiskOpportunityId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "MitigateActionPlanEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "MitigateActionPlanAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ActionDetailsEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ActionDetailsAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Responsibility",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "DueDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "StartDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "CompletionDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "AchievementPercentage",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "AttachmentId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "Attachment",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Attachments.Dtos.AttachmentDto",
          "typeSimple": "RMG.ComplianceSystem.Attachments.Dtos.AttachmentDto",
          "isRequired": false
        },
        {
          "name": "RiskAndOpportunity",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Risks.Dtos.RiskAndOpportunityDto",
          "typeSimple": "RMG.ComplianceSystem.Risks.Dtos.RiskAndOpportunityDto",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Risks.Dtos.HistoryRiskOpportunityPagedAndSortedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Search",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "WorkFlowStages",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "RiskOpportunityId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Risks.Dtos.HistoryRiskAndOpportunityDto": {
      "baseType": "Volo.Abp.Application.Dtos.AuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "RiskAndOpportunityId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "WorkFlowStages",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "ActionName",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "ActionDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Creator",
          "jsonName": null,
          "type": "Volo.Abp.Identity.IdentityUserDto",
          "typeSimple": "Volo.Abp.Identity.IdentityUserDto",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Risks.CreateUpdateHistoryRiskAndOpportunityDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "WorkFlowStages",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "RiskAndOpportunityId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ActionName",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "ActionDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Risks.Dtos.RiskOpportunityPagedAndSortedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Search",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "Potential",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "ReEvaluation",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "PotentialValue",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "OwnerId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "UserId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "DepartmentId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.StaticData.getMatrix": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "likehood",
          "jsonName": null,
          "type": "[RMG.ComplianceSystem.StaticData.getEnumTypeStaticData]",
          "typeSimple": "[RMG.ComplianceSystem.StaticData.getEnumTypeStaticData]",
          "isRequired": false
        },
        {
          "name": "Impact",
          "jsonName": null,
          "type": "[RMG.ComplianceSystem.StaticData.getEnumTypeStaticData]",
          "typeSimple": "[RMG.ComplianceSystem.StaticData.getEnumTypeStaticData]",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Risks.Dtos.CreateUpdateRiskAndOpportunityDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "NameAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "NameEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DetailsAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DetailsEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AffectDetailsAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AffectDetailsEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "FrameWorkId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "status",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "StandardId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "SectorId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "GeneralDepartmentId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "DepartmentId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "CategoryId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "OwnerId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "WorkFlowStages",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "RiskContext",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "ExistingControlEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ExistingControlAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ControlAssessment",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "NumberMatrix",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "Likelihood",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "Impact",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "Potential",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "IsTreatment",
          "jsonName": null,
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false
        },
        {
          "name": "RiskTreatmentOption",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "ReEvaluation",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "Acceptance",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "AcceptanceApprovedby",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "ReviewControlAssessment",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ReviewRemarks",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Notifications.Dtos.NotifyUserDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UnReadNotifications",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "Notifications",
          "jsonName": null,
          "type": "[RMG.ComplianceSystem.Notifications.Dtos.NotifyUserNotificationDto]",
          "typeSimple": "[RMG.ComplianceSystem.Notifications.Dtos.NotifyUserNotificationDto]",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Notifications.Dtos.NotifyUserNotificationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Title",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Url",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Notifications.Status",
          "typeSimple": "RMG.ComplianceSystem.Notifications.Status",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Notifications.Status": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Created",
        "Fail",
        "Success",
        "Seen",
        "NotSeen"
      ],
      "enumValues": [
        0,
        1,
        2,
        3,
        4
      ],
      "genericArguments": null,
      "properties": null
    },
    "RMG.ComplianceSystem.Notifications.Dtos.NotificationPagedAndSortedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Body",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "CreationTime",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "Source",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Notifications.NotySource?",
          "typeSimple": "RMG.ComplianceSystem.Notifications.NotySource?",
          "isRequired": false
        }
      ]
    },
    "System.Nullable<T0>": {
      "baseType": "System.ValueType",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "T"
      ],
      "properties": [
        {
          "name": "HasValue",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "Value",
          "jsonName": null,
          "type": "T",
          "typeSimple": "T",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Notifications.NotySource": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "RiskTreatment",
        "Risk",
        "InternalAuditPreparation",
        "FrameworkWorkflowAction"
      ],
      "enumValues": [
        0,
        1,
        2,
        3
      ],
      "genericArguments": null,
      "properties": null
    },
    "RMG.ComplianceSystem.Notifications.Dtos.NotificationDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "DisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "From",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "To",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ReplyTo",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "CC",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Subject",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Priority",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Notifications.Priority?",
          "typeSimple": "RMG.ComplianceSystem.Notifications.Priority?",
          "isRequired": false
        },
        {
          "name": "Type",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Notifications.NotificationType",
          "typeSimple": "RMG.ComplianceSystem.Notifications.NotificationType",
          "isRequired": false
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Notifications.Status",
          "typeSimple": "RMG.ComplianceSystem.Notifications.Status",
          "isRequired": false
        },
        {
          "name": "SendDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Body",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsHTML",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsSSL",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "Attachments",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Url",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Source",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Notifications.NotySource?",
          "typeSimple": "RMG.ComplianceSystem.Notifications.NotySource?",
          "isRequired": false
        },
        {
          "name": "ReferenceId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "SourceIsDeleted",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Notifications.Priority": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Normal",
        "Low",
        "High"
      ],
      "enumValues": [
        0,
        1,
        2
      ],
      "genericArguments": null,
      "properties": null
    },
    "RMG.ComplianceSystem.Notifications.NotificationType": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Email",
        "Push",
        "SMS"
      ],
      "enumValues": [
        0,
        1,
        2
      ],
      "genericArguments": null,
      "properties": null
    },
    "RMG.ComplianceSystem.Notifications.Dtos.CreateUpdateNotificationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "DisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "From",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "To",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ReplyTo",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "CC",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Subject",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Priority",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Notifications.Priority?",
          "typeSimple": "RMG.ComplianceSystem.Notifications.Priority?",
          "isRequired": false
        },
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.Type",
          "typeSimple": "System.Type",
          "isRequired": false
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Notifications.Status",
          "typeSimple": "RMG.ComplianceSystem.Notifications.Status",
          "isRequired": false
        },
        {
          "name": "SendDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Body",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsHTML",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsSSL",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "Attachments",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "System.Type": {
      "baseType": "System.Reflection.MemberInfo",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsInterface",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "MemberType",
          "jsonName": null,
          "type": "System.Reflection.MemberTypes",
          "typeSimple": "System.Reflection.MemberTypes",
          "isRequired": false
        },
        {
          "name": "Namespace",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AssemblyQualifiedName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "FullName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Assembly",
          "jsonName": null,
          "type": "System.Reflection.Assembly",
          "typeSimple": "System.Reflection.Assembly",
          "isRequired": false
        },
        {
          "name": "Module",
          "jsonName": null,
          "type": "System.Reflection.Module",
          "typeSimple": "System.Reflection.Module",
          "isRequired": false
        },
        {
          "name": "IsNested",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "DeclaringType",
          "jsonName": null,
          "type": "System.Type",
          "typeSimple": "System.Type",
          "isRequired": false
        },
        {
          "name": "DeclaringMethod",
          "jsonName": null,
          "type": "System.Reflection.MethodBase",
          "typeSimple": "System.Reflection.MethodBase",
          "isRequired": false
        },
        {
          "name": "ReflectedType",
          "jsonName": null,
          "type": "System.Type",
          "typeSimple": "System.Type",
          "isRequired": false
        },
        {
          "name": "UnderlyingSystemType",
          "jsonName": null,
          "type": "System.Type",
          "typeSimple": "System.Type",
          "isRequired": false
        },
        {
          "name": "IsTypeDefinition",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsArray",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsByRef",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsPointer",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsConstructedGenericType",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsGenericParameter",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsGenericTypeParameter",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsGenericMethodParameter",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsGenericType",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsGenericTypeDefinition",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsSZArray",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsVariableBoundArray",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsByRefLike",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "HasElementType",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "GenericTypeArguments",
          "jsonName": null,
          "type": "[System.Type]",
          "typeSimple": "[System.Type]",
          "isRequired": false
        },
        {
          "name": "GenericParameterPosition",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "GenericParameterAttributes",
          "jsonName": null,
          "type": "System.Reflection.GenericParameterAttributes",
          "typeSimple": "System.Reflection.GenericParameterAttributes",
          "isRequired": false
        },
        {
          "name": "Attributes",
          "jsonName": null,
          "type": "System.Reflection.TypeAttributes",
          "typeSimple": "System.Reflection.TypeAttributes",
          "isRequired": false
        },
        {
          "name": "IsAbstract",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsImport",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsSealed",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsSpecialName",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsClass",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsNestedAssembly",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsNestedFamANDAssem",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsNestedFamily",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsNestedFamORAssem",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsNestedPrivate",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsNestedPublic",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsNotPublic",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsPublic",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsAutoLayout",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsExplicitLayout",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsLayoutSequential",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsAnsiClass",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsAutoClass",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsUnicodeClass",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsCOMObject",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsContextful",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsEnum",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsMarshalByRef",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsPrimitive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsValueType",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsSignatureType",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsSecurityCritical",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsSecuritySafeCritical",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsSecurityTransparent",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "StructLayoutAttribute",
          "jsonName": null,
          "type": "System.Runtime.InteropServices.StructLayoutAttribute",
          "typeSimple": "System.Runtime.InteropServices.StructLayoutAttribute",
          "isRequired": false
        },
        {
          "name": "TypeInitializer",
          "jsonName": null,
          "type": "System.Reflection.ConstructorInfo",
          "typeSimple": "System.Reflection.ConstructorInfo",
          "isRequired": false
        },
        {
          "name": "TypeHandle",
          "jsonName": null,
          "type": "System.RuntimeTypeHandle",
          "typeSimple": "System.RuntimeTypeHandle",
          "isRequired": false
        },
        {
          "name": "GUID",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "BaseType",
          "jsonName": null,
          "type": "System.Type",
          "typeSimple": "System.Type",
          "isRequired": false
        },
        {
          "name": "DefaultBinder",
          "jsonName": null,
          "type": "System.Reflection.Binder",
          "typeSimple": "System.Reflection.Binder",
          "isRequired": false
        },
        {
          "name": "IsSerializable",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "ContainsGenericParameters",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsVisible",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "System.Reflection.MemberInfo": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "MemberType",
          "jsonName": null,
          "type": "System.Reflection.MemberTypes",
          "typeSimple": "System.Reflection.MemberTypes",
          "isRequired": false
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DeclaringType",
          "jsonName": null,
          "type": "System.Type",
          "typeSimple": "System.Type",
          "isRequired": false
        },
        {
          "name": "ReflectedType",
          "jsonName": null,
          "type": "System.Type",
          "typeSimple": "System.Type",
          "isRequired": false
        },
        {
          "name": "Module",
          "jsonName": null,
          "type": "System.Reflection.Module",
          "typeSimple": "System.Reflection.Module",
          "isRequired": false
        },
        {
          "name": "CustomAttributes",
          "jsonName": null,
          "type": "[System.Reflection.CustomAttributeData]",
          "typeSimple": "[System.Reflection.CustomAttributeData]",
          "isRequired": false
        },
        {
          "name": "IsCollectible",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "MetadataToken",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        }
      ]
    },
    "System.Reflection.MemberTypes": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Constructor",
        "Event",
        "Field",
        "Method",
        "Property",
        "TypeInfo",
        "Custom",
        "NestedType",
        "All"
      ],
      "enumValues": [
        1,
        2,
        4,
        8,
        16,
        32,
        64,
        128,
        191
      ],
      "genericArguments": null,
      "properties": null
    },
    "System.Reflection.Module": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Assembly",
          "jsonName": null,
          "type": "System.Reflection.Assembly",
          "typeSimple": "System.Reflection.Assembly",
          "isRequired": false
        },
        {
          "name": "FullyQualifiedName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "MDStreamVersion",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "ModuleVersionId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ScopeName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ModuleHandle",
          "jsonName": null,
          "type": "System.ModuleHandle",
          "typeSimple": "System.ModuleHandle",
          "isRequired": false
        },
        {
          "name": "CustomAttributes",
          "jsonName": null,
          "type": "[System.Reflection.CustomAttributeData]",
          "typeSimple": "[System.Reflection.CustomAttributeData]",
          "isRequired": false
        },
        {
          "name": "MetadataToken",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        }
      ]
    },
    "System.Reflection.Assembly": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "DefinedTypes",
          "jsonName": null,
          "type": "[System.Reflection.TypeInfo]",
          "typeSimple": "[System.Reflection.TypeInfo]",
          "isRequired": false
        },
        {
          "name": "ExportedTypes",
          "jsonName": null,
          "type": "[System.Type]",
          "typeSimple": "[System.Type]",
          "isRequired": false
        },
        {
          "name": "CodeBase",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "EntryPoint",
          "jsonName": null,
          "type": "System.Reflection.MethodInfo",
          "typeSimple": "System.Reflection.MethodInfo",
          "isRequired": false
        },
        {
          "name": "FullName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ImageRuntimeVersion",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsDynamic",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "Location",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ReflectionOnly",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsCollectible",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsFullyTrusted",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "CustomAttributes",
          "jsonName": null,
          "type": "[System.Reflection.CustomAttributeData]",
          "typeSimple": "[System.Reflection.CustomAttributeData]",
          "isRequired": false
        },
        {
          "name": "EscapedCodeBase",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ManifestModule",
          "jsonName": null,
          "type": "System.Reflection.Module",
          "typeSimple": "System.Reflection.Module",
          "isRequired": false
        },
        {
          "name": "Modules",
          "jsonName": null,
          "type": "[System.Reflection.Module]",
          "typeSimple": "[System.Reflection.Module]",
          "isRequired": false
        },
        {
          "name": "GlobalAssemblyCache",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "HostContext",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "SecurityRuleSet",
          "jsonName": null,
          "type": "System.Security.SecurityRuleSet",
          "typeSimple": "System.Security.SecurityRuleSet",
          "isRequired": false
        }
      ]
    },
    "System.Reflection.TypeInfo": {
      "baseType": "System.Type",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "GenericTypeParameters",
          "jsonName": null,
          "type": "[System.Type]",
          "typeSimple": "[System.Type]",
          "isRequired": false
        },
        {
          "name": "DeclaredConstructors",
          "jsonName": null,
          "type": "[System.Reflection.ConstructorInfo]",
          "typeSimple": "[System.Reflection.ConstructorInfo]",
          "isRequired": false
        },
        {
          "name": "DeclaredEvents",
          "jsonName": null,
          "type": "[System.Reflection.EventInfo]",
          "typeSimple": "[System.Reflection.EventInfo]",
          "isRequired": false
        },
        {
          "name": "DeclaredFields",
          "jsonName": null,
          "type": "[System.Reflection.FieldInfo]",
          "typeSimple": "[System.Reflection.FieldInfo]",
          "isRequired": false
        },
        {
          "name": "DeclaredMembers",
          "jsonName": null,
          "type": "[System.Reflection.MemberInfo]",
          "typeSimple": "[System.Reflection.MemberInfo]",
          "isRequired": false
        },
        {
          "name": "DeclaredMethods",
          "jsonName": null,
          "type": "[System.Reflection.MethodInfo]",
          "typeSimple": "[System.Reflection.MethodInfo]",
          "isRequired": false
        },
        {
          "name": "DeclaredNestedTypes",
          "jsonName": null,
          "type": "[System.Reflection.TypeInfo]",
          "typeSimple": "[System.Reflection.TypeInfo]",
          "isRequired": false
        },
        {
          "name": "DeclaredProperties",
          "jsonName": null,
          "type": "[System.Reflection.PropertyInfo]",
          "typeSimple": "[System.Reflection.PropertyInfo]",
          "isRequired": false
        },
        {
          "name": "ImplementedInterfaces",
          "jsonName": null,
          "type": "[System.Type]",
          "typeSimple": "[System.Type]",
          "isRequired": false
        }
      ]
    },
    "System.Reflection.ConstructorInfo": {
      "baseType": "System.Reflection.MethodBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "MemberType",
          "jsonName": null,
          "type": "System.Reflection.MemberTypes",
          "typeSimple": "System.Reflection.MemberTypes",
          "isRequired": false
        }
      ]
    },
    "System.Reflection.MethodBase": {
      "baseType": "System.Reflection.MemberInfo",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Attributes",
          "jsonName": null,
          "type": "System.Reflection.MethodAttributes",
          "typeSimple": "System.Reflection.MethodAttributes",
          "isRequired": false
        },
        {
          "name": "MethodImplementationFlags",
          "jsonName": null,
          "type": "System.Reflection.MethodImplAttributes",
          "typeSimple": "System.Reflection.MethodImplAttributes",
          "isRequired": false
        },
        {
          "name": "CallingConvention",
          "jsonName": null,
          "type": "System.Reflection.CallingConventions",
          "typeSimple": "System.Reflection.CallingConventions",
          "isRequired": false
        },
        {
          "name": "IsAbstract",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsConstructor",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsFinal",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsHideBySig",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsSpecialName",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsStatic",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsVirtual",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsAssembly",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsFamily",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsFamilyAndAssembly",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsFamilyOrAssembly",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsPrivate",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsPublic",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsConstructedGenericMethod",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsGenericMethod",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsGenericMethodDefinition",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "ContainsGenericParameters",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "MethodHandle",
          "jsonName": null,
          "type": "System.RuntimeMethodHandle",
          "typeSimple": "System.RuntimeMethodHandle",
          "isRequired": false
        },
        {
          "name": "IsSecurityCritical",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsSecuritySafeCritical",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsSecurityTransparent",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "System.Reflection.MethodAttributes": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "ReuseSlot",
        "PrivateScope",
        "Private",
        "FamANDAssem",
        "Assembly",
        "Family",
        "FamORAssem",
        "Public",
        "MemberAccessMask",
        "UnmanagedExport",
        "Static",
        "Final",
        "Virtual",
        "HideBySig",
        "NewSlot",
        "VtableLayoutMask",
        "CheckAccessOnOverride",
        "Abstract",
        "SpecialName",
        "RTSpecialName",
        "PinvokeImpl",
        "HasSecurity",
        "RequireSecObject",
        "ReservedMask"
      ],
      "enumValues": [
        0,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        16,
        32,
        64,
        128,
        256,
        256,
        512,
        1024,
        2048,
        4096,
        8192,
        16384,
        32768,
        53248
      ],
      "genericArguments": null,
      "properties": null
    },
    "System.Reflection.MethodImplAttributes": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "IL",
        "Managed",
        "Native",
        "OPTIL",
        "Runtime",
        "CodeTypeMask",
        "Unmanaged",
        "ManagedMask",
        "NoInlining",
        "ForwardRef",
        "Synchronized",
        "NoOptimization",
        "PreserveSig",
        "AggressiveInlining",
        "AggressiveOptimization",
        "InternalCall",
        "MaxMethodImplVal"
      ],
      "enumValues": [
        0,
        0,
        1,
        2,
        3,
        3,
        4,
        4,
        8,
        16,
        32,
        64,
        128,
        256,
        512,
        4096,
        65535
      ],
      "genericArguments": null,
      "properties": null
    },
    "System.Reflection.CallingConventions": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Standard",
        "VarArgs",
        "Any",
        "HasThis",
        "ExplicitThis"
      ],
      "enumValues": [
        1,
        2,
        3,
        32,
        64
      ],
      "genericArguments": null,
      "properties": null
    },
    "System.RuntimeMethodHandle": {
      "baseType": "System.ValueType",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Value",
          "jsonName": null,
          "type": "System.IntPtr",
          "typeSimple": "number",
          "isRequired": false
        }
      ]
    },
    "System.Reflection.EventInfo": {
      "baseType": "System.Reflection.MemberInfo",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "MemberType",
          "jsonName": null,
          "type": "System.Reflection.MemberTypes",
          "typeSimple": "System.Reflection.MemberTypes",
          "isRequired": false
        },
        {
          "name": "Attributes",
          "jsonName": null,
          "type": "System.Reflection.EventAttributes",
          "typeSimple": "System.Reflection.EventAttributes",
          "isRequired": false
        },
        {
          "name": "IsSpecialName",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "AddMethod",
          "jsonName": null,
          "type": "System.Reflection.MethodInfo",
          "typeSimple": "System.Reflection.MethodInfo",
          "isRequired": false
        },
        {
          "name": "RemoveMethod",
          "jsonName": null,
          "type": "System.Reflection.MethodInfo",
          "typeSimple": "System.Reflection.MethodInfo",
          "isRequired": false
        },
        {
          "name": "RaiseMethod",
          "jsonName": null,
          "type": "System.Reflection.MethodInfo",
          "typeSimple": "System.Reflection.MethodInfo",
          "isRequired": false
        },
        {
          "name": "IsMulticast",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "EventHandlerType",
          "jsonName": null,
          "type": "System.Type",
          "typeSimple": "System.Type",
          "isRequired": false
        }
      ]
    },
    "System.Reflection.EventAttributes": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "None",
        "SpecialName",
        "RTSpecialName",
        "ReservedMask"
      ],
      "enumValues": [
        0,
        512,
        1024,
        1024
      ],
      "genericArguments": null,
      "properties": null
    },
    "System.Reflection.MethodInfo": {
      "baseType": "System.Reflection.MethodBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "MemberType",
          "jsonName": null,
          "type": "System.Reflection.MemberTypes",
          "typeSimple": "System.Reflection.MemberTypes",
          "isRequired": false
        },
        {
          "name": "ReturnParameter",
          "jsonName": null,
          "type": "System.Reflection.ParameterInfo",
          "typeSimple": "System.Reflection.ParameterInfo",
          "isRequired": false
        },
        {
          "name": "ReturnType",
          "jsonName": null,
          "type": "System.Type",
          "typeSimple": "System.Type",
          "isRequired": false
        },
        {
          "name": "ReturnTypeCustomAttributes",
          "jsonName": null,
          "type": "System.Reflection.ICustomAttributeProvider",
          "typeSimple": "System.Reflection.ICustomAttributeProvider",
          "isRequired": false
        }
      ]
    },
    "System.Reflection.ParameterInfo": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Attributes",
          "jsonName": null,
          "type": "System.Reflection.ParameterAttributes",
          "typeSimple": "System.Reflection.ParameterAttributes",
          "isRequired": false
        },
        {
          "name": "Member",
          "jsonName": null,
          "type": "System.Reflection.MemberInfo",
          "typeSimple": "System.Reflection.MemberInfo",
          "isRequired": false
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ParameterType",
          "jsonName": null,
          "type": "System.Type",
          "typeSimple": "System.Type",
          "isRequired": false
        },
        {
          "name": "Position",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "IsIn",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsLcid",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsOptional",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsOut",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsRetval",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "DefaultValue",
          "jsonName": null,
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false
        },
        {
          "name": "RawDefaultValue",
          "jsonName": null,
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false
        },
        {
          "name": "HasDefaultValue",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "CustomAttributes",
          "jsonName": null,
          "type": "[System.Reflection.CustomAttributeData]",
          "typeSimple": "[System.Reflection.CustomAttributeData]",
          "isRequired": false
        },
        {
          "name": "MetadataToken",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        }
      ]
    },
    "System.Reflection.ParameterAttributes": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "None",
        "In",
        "Out",
        "Lcid",
        "Retval",
        "Optional",
        "HasDefault",
        "HasFieldMarshal",
        "Reserved3",
        "Reserved4",
        "ReservedMask"
      ],
      "enumValues": [
        0,
        1,
        2,
        4,
        8,
        16,
        4096,
        8192,
        16384,
        32768,
        61440
      ],
      "genericArguments": null,
      "properties": null
    },
    "System.Reflection.CustomAttributeData": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "AttributeType",
          "jsonName": null,
          "type": "System.Type",
          "typeSimple": "System.Type",
          "isRequired": false
        },
        {
          "name": "Constructor",
          "jsonName": null,
          "type": "System.Reflection.ConstructorInfo",
          "typeSimple": "System.Reflection.ConstructorInfo",
          "isRequired": false
        },
        {
          "name": "ConstructorArguments",
          "jsonName": null,
          "type": "[System.Reflection.CustomAttributeTypedArgument]",
          "typeSimple": "[System.Reflection.CustomAttributeTypedArgument]",
          "isRequired": false
        },
        {
          "name": "NamedArguments",
          "jsonName": null,
          "type": "[System.Reflection.CustomAttributeNamedArgument]",
          "typeSimple": "[System.Reflection.CustomAttributeNamedArgument]",
          "isRequired": false
        }
      ]
    },
    "System.Reflection.CustomAttributeTypedArgument": {
      "baseType": "System.ValueType",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ArgumentType",
          "jsonName": null,
          "type": "System.Type",
          "typeSimple": "System.Type",
          "isRequired": false
        },
        {
          "name": "Value",
          "jsonName": null,
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false
        }
      ]
    },
    "System.Reflection.CustomAttributeNamedArgument": {
      "baseType": "System.ValueType",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "MemberInfo",
          "jsonName": null,
          "type": "System.Reflection.MemberInfo",
          "typeSimple": "System.Reflection.MemberInfo",
          "isRequired": false
        },
        {
          "name": "TypedValue",
          "jsonName": null,
          "type": "System.Reflection.CustomAttributeTypedArgument",
          "typeSimple": "System.Reflection.CustomAttributeTypedArgument",
          "isRequired": false
        },
        {
          "name": "MemberName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsField",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "System.Reflection.ICustomAttributeProvider": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "System.Reflection.FieldInfo": {
      "baseType": "System.Reflection.MemberInfo",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "MemberType",
          "jsonName": null,
          "type": "System.Reflection.MemberTypes",
          "typeSimple": "System.Reflection.MemberTypes",
          "isRequired": false
        },
        {
          "name": "Attributes",
          "jsonName": null,
          "type": "System.Reflection.FieldAttributes",
          "typeSimple": "System.Reflection.FieldAttributes",
          "isRequired": false
        },
        {
          "name": "FieldType",
          "jsonName": null,
          "type": "System.Type",
          "typeSimple": "System.Type",
          "isRequired": false
        },
        {
          "name": "IsInitOnly",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsLiteral",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsNotSerialized",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsPinvokeImpl",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsSpecialName",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsStatic",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsAssembly",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsFamily",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsFamilyAndAssembly",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsFamilyOrAssembly",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsPrivate",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsPublic",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsSecurityCritical",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsSecuritySafeCritical",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsSecurityTransparent",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "FieldHandle",
          "jsonName": null,
          "type": "System.RuntimeFieldHandle",
          "typeSimple": "System.RuntimeFieldHandle",
          "isRequired": false
        }
      ]
    },
    "System.Reflection.FieldAttributes": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "PrivateScope",
        "Private",
        "FamANDAssem",
        "Assembly",
        "Family",
        "FamORAssem",
        "Public",
        "FieldAccessMask",
        "Static",
        "InitOnly",
        "Literal",
        "NotSerialized",
        "HasFieldRVA",
        "SpecialName",
        "RTSpecialName",
        "HasFieldMarshal",
        "PinvokeImpl",
        "HasDefault",
        "ReservedMask"
      ],
      "enumValues": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        16,
        32,
        64,
        128,
        256,
        512,
        1024,
        4096,
        8192,
        32768,
        38144
      ],
      "genericArguments": null,
      "properties": null
    },
    "System.RuntimeFieldHandle": {
      "baseType": "System.ValueType",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Value",
          "jsonName": null,
          "type": "System.IntPtr",
          "typeSimple": "number",
          "isRequired": false
        }
      ]
    },
    "System.Reflection.PropertyInfo": {
      "baseType": "System.Reflection.MemberInfo",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "MemberType",
          "jsonName": null,
          "type": "System.Reflection.MemberTypes",
          "typeSimple": "System.Reflection.MemberTypes",
          "isRequired": false
        },
        {
          "name": "PropertyType",
          "jsonName": null,
          "type": "System.Type",
          "typeSimple": "System.Type",
          "isRequired": false
        },
        {
          "name": "Attributes",
          "jsonName": null,
          "type": "System.Reflection.PropertyAttributes",
          "typeSimple": "System.Reflection.PropertyAttributes",
          "isRequired": false
        },
        {
          "name": "IsSpecialName",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "CanRead",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "CanWrite",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "GetMethod",
          "jsonName": null,
          "type": "System.Reflection.MethodInfo",
          "typeSimple": "System.Reflection.MethodInfo",
          "isRequired": false
        },
        {
          "name": "SetMethod",
          "jsonName": null,
          "type": "System.Reflection.MethodInfo",
          "typeSimple": "System.Reflection.MethodInfo",
          "isRequired": false
        }
      ]
    },
    "System.Reflection.PropertyAttributes": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "None",
        "SpecialName",
        "RTSpecialName",
        "HasDefault",
        "Reserved2",
        "Reserved3",
        "Reserved4",
        "ReservedMask"
      ],
      "enumValues": [
        0,
        512,
        1024,
        4096,
        8192,
        16384,
        32768,
        62464
      ],
      "genericArguments": null,
      "properties": null
    },
    "System.Security.SecurityRuleSet": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "None",
        "Level1",
        "Level2"
      ],
      "enumValues": [
        0,
        1,
        2
      ],
      "genericArguments": null,
      "properties": null
    },
    "System.ModuleHandle": {
      "baseType": "System.ValueType",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "MDStreamVersion",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        }
      ]
    },
    "System.Reflection.GenericParameterAttributes": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "None",
        "Covariant",
        "Contravariant",
        "VarianceMask",
        "ReferenceTypeConstraint",
        "NotNullableValueTypeConstraint",
        "DefaultConstructorConstraint",
        "SpecialConstraintMask"
      ],
      "enumValues": [
        0,
        1,
        2,
        3,
        4,
        8,
        16,
        28
      ],
      "genericArguments": null,
      "properties": null
    },
    "System.Reflection.TypeAttributes": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "NotPublic",
        "AutoLayout",
        "AnsiClass",
        "Class",
        "Public",
        "NestedPublic",
        "NestedPrivate",
        "NestedFamily",
        "NestedAssembly",
        "NestedFamANDAssem",
        "NestedFamORAssem",
        "VisibilityMask",
        "SequentialLayout",
        "ExplicitLayout",
        "LayoutMask",
        "Interface",
        "ClassSemanticsMask",
        "Abstract",
        "Sealed",
        "SpecialName",
        "RTSpecialName",
        "Import",
        "Serializable",
        "WindowsRuntime",
        "UnicodeClass",
        "AutoClass",
        "CustomFormatClass",
        "StringFormatMask",
        "HasSecurity",
        "ReservedMask",
        "BeforeFieldInit",
        "CustomFormatMask"
      ],
      "enumValues": [
        0,
        0,
        0,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        7,
        8,
        16,
        24,
        32,
        32,
        128,
        256,
        1024,
        2048,
        4096,
        8192,
        16384,
        65536,
        131072,
        196608,
        196608,
        262144,
        264192,
        1048576,
        12582912
      ],
      "genericArguments": null,
      "properties": null
    },
    "System.Runtime.InteropServices.StructLayoutAttribute": {
      "baseType": "System.Attribute",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Value",
          "jsonName": null,
          "type": "System.Runtime.InteropServices.LayoutKind",
          "typeSimple": "System.Runtime.InteropServices.LayoutKind",
          "isRequired": false
        }
      ]
    },
    "System.Attribute": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TypeId",
          "jsonName": null,
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false
        }
      ]
    },
    "System.Runtime.InteropServices.LayoutKind": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Sequential",
        "Explicit",
        "Auto"
      ],
      "enumValues": [
        0,
        2,
        3
      ],
      "genericArguments": null,
      "properties": null
    },
    "System.RuntimeTypeHandle": {
      "baseType": "System.ValueType",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Value",
          "jsonName": null,
          "type": "System.IntPtr",
          "typeSimple": "number",
          "isRequired": false
        }
      ]
    },
    "System.Reflection.Binder": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "RMG.ComplianceSystem.InternalAuditQuestions.Dtos.InternalAuditQuestionPagedAndSortedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Search",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.InternalAuditQuestions.InternalAuditQuestionDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityWithUserDto<System.Guid,Volo.Abp.Identity.IdentityUserDto>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "QuestionTextEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "QuestionTextAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "QuestionExplainEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "QuestionExplainAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Selected",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "FrameworkId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "CanDelete",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "Framework",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkDto",
          "typeSimple": "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkDto",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityWithUserDto<System.Guid,Volo.Abp.Identity.IdentityUserDto>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ManagementName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ReviewUserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "OwnerName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "NameAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "NameEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ShortcutAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ShortcutEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DescriptionAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DescriptionEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ManagementId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Shared.SharedStatus",
          "typeSimple": "RMG.ComplianceSystem.Shared.SharedStatus",
          "isRequired": false
        },
        {
          "name": "FrameworkStatus",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Shared.FrameworkStatus",
          "typeSimple": "RMG.ComplianceSystem.Shared.FrameworkStatus",
          "isRequired": false
        },
        {
          "name": "AttachmentId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ReviewUserId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ApproveUserId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "LevelFirstNameAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "LevelFirstNameEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "LevelSecondNameAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "LevelSecondNameEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "LevelThirdNameAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "LevelThirdNameEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "OwnerId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "LevelFourNameAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "LevelFourNameEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ComplianceStatus",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Shared.ComplianceStatus",
          "typeSimple": "RMG.ComplianceSystem.Shared.ComplianceStatus",
          "isRequired": false
        },
        {
          "name": "SelfAssessmentStartDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "FrameworkEmpsDto",
          "jsonName": null,
          "type": "[RMG.ComplianceSystem.Frameworks.Dtos.FrameworkEmpDto]",
          "typeSimple": "[RMG.ComplianceSystem.Frameworks.Dtos.FrameworkEmpDto]",
          "isRequired": false
        },
        {
          "name": "ChangeStatusLogs",
          "jsonName": null,
          "type": "[RMG.ComplianceSystem.Frameworks.FrameworkChangeStatusLogDto]",
          "typeSimple": "[RMG.ComplianceSystem.Frameworks.FrameworkChangeStatusLogDto]",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Shared.SharedStatus": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Inactive",
        "Active"
      ],
      "enumValues": [
        0,
        1
      ],
      "genericArguments": null,
      "properties": null
    },
    "RMG.ComplianceSystem.Shared.FrameworkStatus": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "NewFramework",
        "UnderReview",
        "UnderApproval",
        "Approved",
        "ReturnedToCreator"
      ],
      "enumValues": [
        0,
        1,
        2,
        3,
        4
      ],
      "genericArguments": null,
      "properties": null
    },
    "RMG.ComplianceSystem.Shared.ComplianceStatus": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "NotStarted",
        "UnderPreparation"
      ],
      "enumValues": [
        0,
        1
      ],
      "genericArguments": null,
      "properties": null
    },
    "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkEmpDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FrameworkId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "EmployeeId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "EmployeeName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Frameworks.FrameworkChangeStatusLogDto": {
      "baseType": "Volo.Abp.Application.Dtos.CreationAuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CreatorName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Shared.FrameworkStatus",
          "typeSimple": "RMG.ComplianceSystem.Shared.FrameworkStatus",
          "isRequired": false
        },
        {
          "name": "Comment",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "FrameworkId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.InternalAuditQuestions.CreateUpdateInternalAuditQuestionDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "QuestionTextEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "QuestionTextAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "QuestionExplainEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "QuestionExplainAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "FrameworkId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.CreateUpdateInternalAuditMenuQuestionDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "MenuTextEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "MenuTextAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsEditable",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "FrameworkId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "QuestionsIds",
          "jsonName": null,
          "type": "[System.Guid]",
          "typeSimple": "[string]",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.InternalAuditMenuQuestionDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityWithUserDto<System.Guid,Volo.Abp.Identity.IdentityUserDto>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "MenuTextEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "MenuTextAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsEditable",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "FrameworkId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Framework",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkDto",
          "typeSimple": "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkDto",
          "isRequired": false
        },
        {
          "name": "InternalAuditQuestions",
          "jsonName": null,
          "type": "[RMG.ComplianceSystem.InternalAuditQuestions.InternalAuditQuestionDto]",
          "typeSimple": "[RMG.ComplianceSystem.InternalAuditQuestions.InternalAuditQuestionDto]",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.InternalAuditQuestionLists.Header.Dto.InternalAuditMenuQuestionPagedAndSortedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Search",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "FrameworkId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.InternalAuditQuestionLists.Footer.Dto.InternalAuditQuestionListPagedAndSortedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Search",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "InternalAuditMenuQuestionId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "InternalAuditQuestionId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.InternalAuditPreparation.Dto.CreateUpdateInternalAuditPreparationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "AuditCode",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AuditTitleEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AuditTitleAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AuditDescriptionEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AuditDescriptionAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AuditFieldEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AuditFieldAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AuditSetpsEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AuditSetpsAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AuditGoalsEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AuditGoalsAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DepartmentId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "StartDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "EndDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "RiskOpportunityId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "RiskOpportunityIds",
          "jsonName": null,
          "type": "[System.Guid]",
          "typeSimple": "[string]",
          "isRequired": false
        },
        {
          "name": "FrameworkId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Auditors",
          "jsonName": null,
          "type": "[RMG.ComplianceSystem.InternalAuditPreparation.Dto.InternalAuditorDto]",
          "typeSimple": "[RMG.ComplianceSystem.InternalAuditPreparation.Dto.InternalAuditorDto]",
          "isRequired": false
        },
        {
          "name": "IsApprove",
          "jsonName": null,
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false
        },
        {
          "name": "approveDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "ApproveBy",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "CausesRefuse",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.InternalAuditPreparation.Dto.InternalAuditorDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "InternalAuditPreparationId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "UserId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DepartmentId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "IsAuditor",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.InternalAuditPreparation.Dto.InternalAuditPreparationDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityWithUserDto<System.Guid,Volo.Abp.Identity.IdentityUserDto>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "AuditCode",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AuditTitleEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AuditTitleAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AuditDescriptionEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AuditDescriptionAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AuditFieldEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AuditFieldAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AuditSetpsEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AuditSetpsAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AuditGoalsEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AuditGoalsAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DepartmentId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Department",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Departments.Dtos.DepartmentDto",
          "typeSimple": "RMG.ComplianceSystem.Departments.Dtos.DepartmentDto",
          "isRequired": false
        },
        {
          "name": "StartDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "EndDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "RiskOpportunityId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "RiskOpportunityIds",
          "jsonName": null,
          "type": "[System.Guid]",
          "typeSimple": "[string]",
          "isRequired": false
        },
        {
          "name": "RiskOpportunity",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Risks.Dtos.RiskAndOpportunityDto",
          "typeSimple": "RMG.ComplianceSystem.Risks.Dtos.RiskAndOpportunityDto",
          "isRequired": false
        },
        {
          "name": "FrameworkId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Framework",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkDto",
          "typeSimple": "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkDto",
          "isRequired": false
        },
        {
          "name": "AuditorDto",
          "jsonName": null,
          "type": "[RMG.ComplianceSystem.InternalAuditPreparation.Dto.AuditorDto]",
          "typeSimple": "[RMG.ComplianceSystem.InternalAuditPreparation.Dto.AuditorDto]",
          "isRequired": false
        },
        {
          "name": "AuditorDeptDto",
          "jsonName": null,
          "type": "[RMG.ComplianceSystem.InternalAuditPreparation.Dto.InternalAuditorDto]",
          "typeSimple": "[RMG.ComplianceSystem.InternalAuditPreparation.Dto.InternalAuditorDto]",
          "isRequired": false
        },
        {
          "name": "IsApprove",
          "jsonName": null,
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false
        },
        {
          "name": "approveDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "ApproveBy",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "CausesRefuse",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Departments.Dtos.DepartmentDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityWithUserDto<System.Guid,Volo.Abp.Identity.IdentityUserDto>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.InternalAuditPreparation.Dto.AuditorDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "InternalAuditPreparationId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "UserId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsAuditor",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.InternalAuditPreparation.Dto.InternalAuditPreparationPagedAndSortedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Search",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "FrameworkId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "DepartmentId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "IsApprove",
          "jsonName": null,
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false
        },
        {
          "name": "approveDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "ApproveBy",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Employees.Dtos.EmployeeDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityWithUserDto<System.Guid,Volo.Abp.Identity.IdentityUserDto>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FullName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DepartmentId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "IsManager",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsUse",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "DepartmentName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.InternalAuditApproves.InternalAuditApprovePagedAndSortedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsApprove",
          "jsonName": null,
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false
        },
        {
          "name": "approveDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "ApproveBy",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.InternalAuditApproves.InternalAuditApproveDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityWithUserDto<System.Guid,Volo.Abp.Identity.IdentityUserDto>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "InternalAuditId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsApprove",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "approveDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ApproveBy",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "CausesRefuse",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "UserApproveBy",
          "jsonName": null,
          "type": "Volo.Abp.Identity.IdentityUserDto",
          "typeSimple": "Volo.Abp.Identity.IdentityUserDto",
          "isRequired": false
        },
        {
          "name": "InternalAuditPreparationDto",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.InternalAuditPreparation.Dto.InternalAuditPreparationDto",
          "typeSimple": "RMG.ComplianceSystem.InternalAuditPreparation.Dto.InternalAuditPreparationDto",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.InternalAuditApproves.CreateUpdateInternalAuditApproveDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsApprove",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "approveDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ApproveBy",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "CausesRefuse",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Helpers.DataDecryptedReturnDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Data",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Frameworks.Dtos.CreateUpdateFrameworkDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "NameAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "NameEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ShortcutAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ShortcutEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DescriptionAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DescriptionEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ManagementId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "OwnerId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AttachmentId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ReviewUserId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ApproveUserId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "LevelFirstNameAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "LevelFirstNameEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "LevelSecondNameAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "LevelSecondNameEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "LevelThirdNameAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "LevelThirdNameEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "LevelFourNameAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "LevelFourNameEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "FrameworkEmpsDto",
          "jsonName": null,
          "type": "[RMG.ComplianceSystem.Frameworks.Dtos.FrameworkEmpDto]",
          "typeSimple": "[RMG.ComplianceSystem.Frameworks.Dtos.FrameworkEmpDto]",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Frameworks.Dtos.getFrameworkDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FrameworkId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkData": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TotalApplicable",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "TotalNotApplicable",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "FrameworkDto",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkDto",
          "typeSimple": "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkDto",
          "isRequired": false
        },
        {
          "name": "DomainDta",
          "jsonName": null,
          "type": "[RMG.ComplianceSystem.Frameworks.Dtos.MainDomainsDto]",
          "typeSimple": "[RMG.ComplianceSystem.Frameworks.Dtos.MainDomainsDto]",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Frameworks.Dtos.MainDomainsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "LevelOne",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "LevelTwo",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "LevelThree",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "Levelfour",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "LevelFive",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "Maindomain",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Domains.Dtos.DomainDto",
          "typeSimple": "RMG.ComplianceSystem.Domains.Dtos.DomainDto",
          "isRequired": false
        },
        {
          "name": "ChildrenDomains",
          "jsonName": null,
          "type": "[RMG.ComplianceSystem.Frameworks.Dtos.SubDomainsDto]",
          "typeSimple": "[RMG.ComplianceSystem.Frameworks.Dtos.SubDomainsDto]",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Domains.Dtos.DomainDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityWithUserDto<System.Guid,Volo.Abp.Identity.IdentityUserDto>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "NameAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "NameEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DescriptionAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DescriptionEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Reference",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Shared.SharedStatus",
          "typeSimple": "RMG.ComplianceSystem.Shared.SharedStatus",
          "isRequired": false
        },
        {
          "name": "ComplianceStatus",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Shared.ComplianceStatus",
          "typeSimple": "RMG.ComplianceSystem.Shared.ComplianceStatus",
          "isRequired": false
        },
        {
          "name": "ParentId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "FrameworkId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ResponsibleId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "ResponsibleName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Departments",
          "jsonName": null,
          "type": "[RMG.ComplianceSystem.Shared.NameId<System.Guid>]",
          "typeSimple": "[RMG.ComplianceSystem.Shared.NameId<string>]",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Shared.NameId<T0>": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "T"
      ],
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Id",
          "jsonName": null,
          "type": "T",
          "typeSimple": "T",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Frameworks.Dtos.SubDomainsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Subdomain",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Domains.Dtos.DomainDto",
          "typeSimple": "RMG.ComplianceSystem.Domains.Dtos.DomainDto",
          "isRequired": false
        },
        {
          "name": "ChildrenControls",
          "jsonName": null,
          "type": "[RMG.ComplianceSystem.Frameworks.Dtos.MainControlsDto]",
          "typeSimple": "[RMG.ComplianceSystem.Frameworks.Dtos.MainControlsDto]",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Frameworks.Dtos.MainControlsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "MainControl",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Controls.Dtos.ControlDto",
          "typeSimple": "RMG.ComplianceSystem.Controls.Dtos.ControlDto",
          "isRequired": false
        },
        {
          "name": "subControl",
          "jsonName": null,
          "type": "[RMG.ComplianceSystem.Frameworks.Dtos.SubControlsDto]",
          "typeSimple": "[RMG.ComplianceSystem.Frameworks.Dtos.SubControlsDto]",
          "isRequired": false
        },
        {
          "name": "AssessmentDto",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Assessments.Dtos.AssessmentDto",
          "typeSimple": "RMG.ComplianceSystem.Assessments.Dtos.AssessmentDto",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Controls.Dtos.ControlDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityWithUserDto<System.Guid,Volo.Abp.Identity.IdentityUserDto>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "NameAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "NameEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DescriptionAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DescriptionEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Reference",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Shared.SharedStatus",
          "typeSimple": "RMG.ComplianceSystem.Shared.SharedStatus",
          "isRequired": false
        },
        {
          "name": "ParentId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "DomainId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Frameworks.Dtos.SubControlsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "subControl",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Controls.Dtos.ControlDto",
          "typeSimple": "RMG.ComplianceSystem.Controls.Dtos.ControlDto",
          "isRequired": false
        },
        {
          "name": "AssessmentDto",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Assessments.Dtos.AssessmentDto",
          "typeSimple": "RMG.ComplianceSystem.Assessments.Dtos.AssessmentDto",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Assessments.Dtos.AssessmentDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityWithUserDto<System.Guid,Volo.Abp.Identity.IdentityUserDto>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ControlId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Applicable",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Assessments.ApplicableType?",
          "typeSimple": "RMG.ComplianceSystem.Assessments.ApplicableType?",
          "isRequired": false
        },
        {
          "name": "ComplianceLevel",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Assessments.ComplianceLevelType?",
          "typeSimple": "RMG.ComplianceSystem.Assessments.ComplianceLevelType?",
          "isRequired": false
        },
        {
          "name": "ComplianceDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "NextComplianceDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "Documented",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Assessments.DocumentedType?",
          "typeSimple": "RMG.ComplianceSystem.Assessments.DocumentedType?",
          "isRequired": false
        },
        {
          "name": "Implemented",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Assessments.ImplementedType?",
          "typeSimple": "RMG.ComplianceSystem.Assessments.ImplementedType?",
          "isRequired": false
        },
        {
          "name": "Effective",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Assessments.EffectiveType?",
          "typeSimple": "RMG.ComplianceSystem.Assessments.EffectiveType?",
          "isRequired": false
        },
        {
          "name": "Comment",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AttachmentId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "Employees",
          "jsonName": null,
          "type": "[RMG.ComplianceSystem.Shared.NameId<System.Guid>]",
          "typeSimple": "[RMG.ComplianceSystem.Shared.NameId<string>]",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Assessments.ApplicableType": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "NotApplicable",
        "Applicable"
      ],
      "enumValues": [
        0,
        1
      ],
      "genericArguments": null,
      "properties": null
    },
    "RMG.ComplianceSystem.Assessments.ComplianceLevelType": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "ComplianceLevel1",
        "ComplianceLevel2",
        "ComplianceLevel3",
        "ComplianceLevel4",
        "ComplianceLevel5"
      ],
      "enumValues": [
        1,
        2,
        3,
        4,
        5
      ],
      "genericArguments": null,
      "properties": null
    },
    "RMG.ComplianceSystem.Assessments.DocumentedType": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "NotDocumented",
        "PartialDocumented",
        "Documented"
      ],
      "enumValues": [
        0,
        1,
        2
      ],
      "genericArguments": null,
      "properties": null
    },
    "RMG.ComplianceSystem.Assessments.ImplementedType": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "NotImplemented",
        "PartialImplemented",
        "Implemented"
      ],
      "enumValues": [
        0,
        1,
        2
      ],
      "genericArguments": null,
      "properties": null
    },
    "RMG.ComplianceSystem.Assessments.EffectiveType": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "NotEffective",
        "PartialEffective",
        "Effective"
      ],
      "enumValues": [
        0,
        1,
        2
      ],
      "genericArguments": null,
      "properties": null
    },
    "RMG.ComplianceSystem.Frameworks.Dtos.RejectFrameworkDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Reason",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkPagedAndSortedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Search",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Shared.SharedStatus?",
          "typeSimple": "RMG.ComplianceSystem.Shared.SharedStatus?",
          "isRequired": false
        },
        {
          "name": "FrameworkStatus",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Shared.FrameworkStatus?",
          "typeSimple": "RMG.ComplianceSystem.Shared.FrameworkStatus?",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkEmployeeDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityWithUserDto<System.Guid,Volo.Abp.Identity.IdentityUserDto>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FrameworkId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "EmployeeId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Frameworks.Dtos.CreateUpdateFrameworkEmployeeDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FrameworkId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "EmployeeId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Frameworks.Dtos.FrameworkEmployeePagedAndSortedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FrameworkId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "EmployeeId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Employees.Dtos.CreateUpdateEmployeeDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FullName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DepartmentId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "IsManager",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Employees.Dtos.EmployeePagedAndSortedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Search",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplatePagedAndSortedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Key",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Subject",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Search",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.EmailTemplates.Dtos.EmailTemplateDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityWithUserDto<System.Guid,Volo.Abp.Identity.IdentityUserDto>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Key",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Subject",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Body",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "NotificationBody",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.EmailTemplates.Dtos.CreateUpdateEmailTemplateDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Key",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Subject",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Body",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "NotificationBody",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Domains.Dtos.CreateUpdateDomainDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "NameAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "NameEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DescriptionAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DescriptionEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Reference",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Shared.SharedStatus",
          "typeSimple": "RMG.ComplianceSystem.Shared.SharedStatus",
          "isRequired": false
        },
        {
          "name": "ParentId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "FrameworkId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ResponsibleId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "DepartmentIds",
          "jsonName": null,
          "type": "[System.Guid]",
          "typeSimple": "[string]",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Domains.Dtos.DomainPagedAndSortedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FrameworkId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "MainDomainId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "IsMainDomain",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "Search",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Shared.SharedStatus?",
          "typeSimple": "RMG.ComplianceSystem.Shared.SharedStatus?",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Domains.Dtos.DomainWithoutPagingDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityWithUserDto<System.Guid,Volo.Abp.Identity.IdentityUserDto>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "NameAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "NameEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DescriptionAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DescriptionEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Reference",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Shared.SharedStatus",
          "typeSimple": "RMG.ComplianceSystem.Shared.SharedStatus",
          "isRequired": false
        },
        {
          "name": "ParentId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "FrameworkId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ResponsibleId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "ResponsibleName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Departments",
          "jsonName": null,
          "type": "[RMG.ComplianceSystem.Shared.NameId<System.Guid>]",
          "typeSimple": "[RMG.ComplianceSystem.Shared.NameId<string>]",
          "isRequired": false
        },
        {
          "name": "Controls",
          "jsonName": null,
          "type": "[RMG.ComplianceSystem.Controls.Dtos.ControlDto]",
          "typeSimple": "[RMG.ComplianceSystem.Controls.Dtos.ControlDto]",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Documents.Dtos.DocCategoryPagedAndSortedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Search",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Documents.Dtos.DocumentCategoryDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityWithUserDto<System.Guid,Volo.Abp.Identity.IdentityUserDto>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "NameAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "NameEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TenantId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Documents.Dtos.CreateUpdateDocumentCategoryDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "NameAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "NameEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "TenantId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Documents.Dtos.DocPagedAndSortedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Search",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "CategoryId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Documents.Dtos.DocumentDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityWithUserDto<System.Guid,Volo.Abp.Identity.IdentityUserDto>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TitleAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TitleEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "CategoryId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AttachmentId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "CategoryNameAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "CategoryNameEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "CreatorUserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "UpdateUserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Attachment",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Attachments.Dtos.AttachmentDto",
          "typeSimple": "RMG.ComplianceSystem.Attachments.Dtos.AttachmentDto",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Documents.Dtos.CreateUpdateDocumentDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TitleAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "TitleEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "CategoryId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AttachmentId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.DepartmentUsers.DepartmentUserPagedAndSortedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "DepartmentId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "UserId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.DepartmentUsers.DepartmentUserDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityWithUserDto<System.Guid,Volo.Abp.Identity.IdentityUserDto>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "DepartmentId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "UserId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.DepartmentUsers.CreateUpdateDepartmentUserDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "DepartmentId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "UserId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Departments.Dtos.CreateUpdateDepartmentDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Departments.Dtos.DepartmentPagedAndSortedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Search",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Controls.Dtos.ControlPagedAndSortedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "MainControlId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "IsMainControl",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "Search",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Shared.SharedStatus?",
          "typeSimple": "RMG.ComplianceSystem.Shared.SharedStatus?",
          "isRequired": false
        },
        {
          "name": "DomainId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "FrameWorkId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Controls.Dtos.CreateUpdateControlDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "NameAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "NameEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DescriptionAr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DescriptionEn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Reference",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Shared.SharedStatus",
          "typeSimple": "RMG.ComplianceSystem.Shared.SharedStatus",
          "isRequired": false
        },
        {
          "name": "ParentId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "DomainId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Breadcrumbs.Dtos.GetBreadCrumbSettingsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Type",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Breadcrumbs.BreadCrumbSettingsType",
          "typeSimple": "RMG.ComplianceSystem.Breadcrumbs.BreadCrumbSettingsType",
          "isRequired": false
        },
        {
          "name": "Id",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Breadcrumbs.BreadCrumbSettingsType": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Framework",
        "MainDomain",
        "SubDomain",
        "MainControl",
        "SubControl"
      ],
      "enumValues": [
        0,
        1,
        2,
        3,
        4
      ],
      "genericArguments": null,
      "properties": null
    },
    "RMG.ComplianceSystem.Breadcrumbs.Dtos.BreadCrumbSettingsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FrameworkName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "FrameworkUrl",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DomainName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DomainUrl",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "SubDomainName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "SubDomainUrl",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ControlName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ControlUrl",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "SubControlName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "SubControlUrl",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Books.BookDto": {
      "baseType": "Volo.Abp.Application.Dtos.AuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Type",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Books.BookType",
          "typeSimple": "RMG.ComplianceSystem.Books.BookType",
          "isRequired": false
        },
        {
          "name": "PublishDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Price",
          "jsonName": null,
          "type": "System.Single",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "AuthorId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AuthorName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Books.BookType": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Undefined",
        "Adventure",
        "Biography",
        "Dystopia",
        "Fantastic",
        "Horror",
        "Science",
        "ScienceFiction",
        "Poetry"
      ],
      "enumValues": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "genericArguments": null,
      "properties": null
    },
    "RMG.ComplianceSystem.Books.AuthorLookupDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Books.CreateAuthorWithBookDto": {
      "baseType": "RMG.ComplianceSystem.Authors.CreateAuthorDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Books",
          "jsonName": null,
          "type": "[RMG.ComplianceSystem.Books.CreateBookDto]",
          "typeSimple": "[RMG.ComplianceSystem.Books.CreateBookDto]",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Authors.CreateAuthorDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "BirthDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "ShortBio",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Books.CreateBookDto": {
      "baseType": "Volo.Abp.Application.Dtos.AuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "Type",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Books.BookType",
          "typeSimple": "RMG.ComplianceSystem.Books.BookType",
          "isRequired": true
        },
        {
          "name": "PublishDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "Price",
          "jsonName": null,
          "type": "System.Single",
          "typeSimple": "number",
          "isRequired": true
        }
      ]
    },
    "RMG.ComplianceSystem.Books.AuthorWithDetailsDto": {
      "baseType": "RMG.ComplianceSystem.Authors.AuthorDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Books",
          "jsonName": null,
          "type": "[RMG.ComplianceSystem.Books.BookDto]",
          "typeSimple": "[RMG.ComplianceSystem.Books.BookDto]",
          "isRequired": true
        }
      ]
    },
    "RMG.ComplianceSystem.Authors.AuthorDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "BirthDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ShortBio",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Books.CreateUpdateBookDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "Type",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Books.BookType",
          "typeSimple": "RMG.ComplianceSystem.Books.BookType",
          "isRequired": true
        },
        {
          "name": "PublishDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "Price",
          "jsonName": null,
          "type": "System.Single",
          "typeSimple": "number",
          "isRequired": true
        },
        {
          "name": "AuthorId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Authors.GetAuthorListDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Filter",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Authors.UpdateAuthorDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "BirthDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "ShortBio",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Microsoft.AspNetCore.Http.IFormFile": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ContentType",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ContentDisposition",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Headers",
          "jsonName": null,
          "type": "{System.String:Microsoft.Extensions.Primitives.StringValues}",
          "typeSimple": "{string:Microsoft.Extensions.Primitives.StringValues}",
          "isRequired": false
        },
        {
          "name": "Length",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "FileName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Content.IRemoteStreamContent": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ContentType",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ContentLength",
          "jsonName": null,
          "type": "System.Int64?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "FileName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "RMG.ComplianceSystem.Assessments.Dtos.CreateUpdateAssessmentDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ControlId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Applicable",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Assessments.ApplicableType?",
          "typeSimple": "RMG.ComplianceSystem.Assessments.ApplicableType?",
          "isRequired": false
        },
        {
          "name": "ComplianceLevel",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Assessments.ComplianceLevelType?",
          "typeSimple": "RMG.ComplianceSystem.Assessments.ComplianceLevelType?",
          "isRequired": false
        },
        {
          "name": "ComplianceDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "NextComplianceDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "Documented",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Assessments.DocumentedType?",
          "typeSimple": "RMG.ComplianceSystem.Assessments.DocumentedType?",
          "isRequired": false
        },
        {
          "name": "Implemented",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Assessments.ImplementedType?",
          "typeSimple": "RMG.ComplianceSystem.Assessments.ImplementedType?",
          "isRequired": false
        },
        {
          "name": "Effective",
          "jsonName": null,
          "type": "RMG.ComplianceSystem.Assessments.EffectiveType?",
          "typeSimple": "RMG.ComplianceSystem.Assessments.EffectiveType?",
          "isRequired": false
        },
        {
          "name": "Comment",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AttachmentId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "EmployeeIds",
          "jsonName": null,
          "type": "[System.Guid]",
          "typeSimple": "[string]",
          "isRequired": false
        }
      ]
    }
  }
}